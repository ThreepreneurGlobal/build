{"version":3,"sources":["containers/navs/Breadcrumb.js","components/StateButton.js","components/common/CustomSelectInput.js","views/app/profile/about/index.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","StateButton","color","children","onClick","next","useState","status","setStatus","message","setMessage","messageShow","setMessageShow","classnames","then","res","catch","err","finally","setTimeout","disabled","placement","isOpen","target","CustomSelectInput","props","customProps","autoCorrect","autoCapitalize","Input","connect","history","authUser","currentUser","profileData","email","full_name","gender","tshirt_size","contact_no","bio","editAbout","setEditAbout","formValues","setFormValues","handleChange","event","key","value","handleSubmitAbout","newData","a","instance","method","url","data","response","success","setProfileData","Promise","resolve","_","reject","Row","xxs","Breadcrumb","md","Card","Button","outline","CardBody","CardTitle","IntlMessages","FormGroup","Label","type","name","onChange","components","classNamePrefix","defaultInputValue","selectedOption","options","genderOptions","shirtSizeOptions","rows","placeholder","href"],"mappings":"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","file":"static/js/profile-about.3fde18ba.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/').filter(Boolean);\n\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React, { useState } from 'react';\nimport { Button, Popover, PopoverBody } from 'reactstrap';\nimport classnames from 'classnames';\n\nconst StateButton = ({ id, className, color, children, onClick, next }) => {\n  const [status, setStatus] = useState('default');\n  const [message, setMessage] = useState('');\n  const [messageShow, setMessageShow] = useState(false);\n\n  const handleOnClick = () => {\n    setStatus('processing');\n\n    onClick()\n      .then((res) => {\n        setMessage(res);\n        setStatus('success');\n      })\n      .catch((err) => {\n        setMessage(err);\n        setStatus('fail');\n      })\n      .finally(() => {\n        setMessageShow(true);\n        setTimeout(() => {\n          setStatus('default');\n          setMessageShow(false);\n          if (next) {\n            next();\n          }\n        }, 3000);\n      });\n  };\n\n  return (\n    <span>\n      <Button\n        id={id}\n        className={`btn-multiple-state  ${className}  ${classnames({\n          'show-spinner': status === 'processing',\n          'show-success': status === 'success',\n          'show-fail': status === 'fail',\n        })}`}\n        color={color}\n        onClick={handleOnClick}\n        disabled={status !== 'default'}\n      >\n        <Popover placement=\"top\" isOpen={messageShow} target={id}>\n          <PopoverBody>{message}</PopoverBody>\n        </Popover>\n        <span className=\"spinner d-inline-block\">\n          <span className=\"bounce1\" />\n          <span className=\"bounce2\" />\n          <span className=\"bounce3\" />\n        </span>\n        <span className=\"icon success\">\n          <i className=\"simple-icon-check\" />\n        </span>\n        <span className=\"icon fail\">\n          <i className=\"simple-icon-exclamation\" />\n        </span>\n        <span className=\"label\">{children}</span>\n      </Button>\n    </span>\n  );\n};\n\nexport default StateButton;\n","import React from 'react';\nimport { components } from 'react-select';\n\nconst CustomSelectInput = (props) => {\n  const customProps = { ...props };\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput;\n","/* eslint-disable camelcase */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Row,\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Input,\n  Label,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport {\n  Colxx,\n  Separator,\n} from '../../../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\nimport CustomSelectInput from '../../../../components/common/CustomSelectInput';\nimport {\n  adminRoot,\n  genderOptions,\n  shirtSizeOptions,\n} from '../../../../constants/defaultValues';\nimport StateButton from '../../../../components/StateButton';\nimport instance from '../../../../helpers/axiosInstance';\nimport { setProfileData } from '../../../../helpers/Utils';\n\nconst About = ({ match, currentUser, profileData }) => {\n  const { email } = currentUser;\n  const { id, full_name, gender, tshirt_size, contact_no, bio } = profileData;\n\n  const [editAbout, setEditAbout] = useState(false);\n\n  const [formValues, setFormValues] = useState({\n    full_name,\n    gender,\n    tshirt_size,\n    contact_no,\n    bio,\n  });\n\n  const handleChange = (event, key) => {\n    setFormValues({\n      ...formValues,\n      [key]: event.target.value,\n    });\n  };\n\n  const handleSubmitAbout = async (newData) => {\n    const response = await instance({\n      method: 'POST',\n      url: '/updateProfile',\n      data: { id, ...newData },\n    });\n\n    const { data } = response;\n\n    if (data.success) {\n      setProfileData({ ...profileData, ...newData });\n      return new Promise((resolve) => {\n        resolve('Profile updated successfully!');\n      });\n    }\n\n    return new Promise((_, reject) => {\n      // eslint-disable-next-line\n      reject('Failed to update profile!');\n    });\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.about\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Colxx xxs=\"12\" md=\"8\">\n          <Card className=\"mb-4\">\n            <div className=\"position-absolute card-top-buttons\">\n              <Button\n                outline\n                color=\"primary\"\n                onClick={() => {\n                  setEditAbout(!editAbout);\n                }}\n                className=\"icon-button\"\n              >\n                <i className=\"simple-icon-pencil\" />\n              </Button>\n            </div>\n            <CardBody>\n              <CardTitle>\n                <h2 className=\"lead\">\n                  <IntlMessages id=\"user.update-about\" />\n                </h2>\n              </CardTitle>\n\n              <Separator className=\"mb-3\" />\n\n              <FormGroup className=\"mb-3\">\n                <Label>\n                  <IntlMessages id=\"forms.full-name\" />\n                </Label>\n                <Input\n                  type=\"text\"\n                  name=\"full-name\"\n                  value={formValues.full_name}\n                  onChange={(event) => {\n                    handleChange(event, 'full_name');\n                  }}\n                  disabled={!editAbout}\n                />\n              </FormGroup>\n\n              <FormGroup className=\"mb-3\">\n                <Label>\n                  <IntlMessages id=\"forms.email\" />\n                </Label>\n                <Input type=\"text\" name=\"email\" value={email} disabled />\n              </FormGroup>\n\n              <FormGroup className=\"mb-3\">\n                <Label>\n                  <IntlMessages id=\"forms.phone\" />\n                </Label>\n                <Input\n                  type=\"text\"\n                  name=\"phone\"\n                  value={formValues.contact_no}\n                  onChange={(event) => {\n                    handleChange(event, 'contact_no');\n                  }}\n                  disabled={!editAbout}\n                />\n              </FormGroup>\n\n              <FormGroup className=\"mb-3\">\n                <Label>\n                  <IntlMessages id=\"forms.gender\" />\n                </Label>\n                {editAbout ? (\n                  <Select\n                    components={{ Input: CustomSelectInput }}\n                    className=\"react-select\"\n                    classNamePrefix=\"react-select\"\n                    name=\"select-gender\"\n                    defaultInputValue={formValues.gender}\n                    onChange={(selectedOption) => {\n                      setFormValues({\n                        ...formValues,\n                        gender: selectedOption.value,\n                      });\n                    }}\n                    options={genderOptions}\n                  />\n                ) : (\n                  <Input\n                    type=\"text\"\n                    name=\"gender\"\n                    value={formValues.gender}\n                    disabled={!editAbout}\n                  />\n                )}\n              </FormGroup>\n\n              <FormGroup className=\"mb-3\">\n                <Label>\n                  <IntlMessages id=\"forms.t-shirt-size\" />\n                </Label>\n                {editAbout ? (\n                  <Select\n                    components={{ Input: CustomSelectInput }}\n                    className=\"react-select\"\n                    classNamePrefix=\"react-select\"\n                    name=\"select-t-shirt-size\"\n                    defaultInputValue={formValues.tshirt_size}\n                    onChange={(selectedOption) => {\n                      setFormValues({\n                        ...formValues,\n                        tshirt_size: selectedOption.value,\n                      });\n                    }}\n                    options={shirtSizeOptions}\n                  />\n                ) : (\n                  <Input\n                    type=\"text\"\n                    name=\"t-shirt-size\"\n                    value={formValues.tshirt_size}\n                    disabled={!editAbout}\n                  />\n                )}\n              </FormGroup>\n\n              <FormGroup className=\"mb-3\">\n                <Label>\n                  <IntlMessages id=\"forms.bio\" />\n                </Label>\n                <Input\n                  type=\"textarea\"\n                  name=\"bio\"\n                  rows=\"6\"\n                  placeholder=\"About Yourself\"\n                  value={formValues.bio}\n                  onChange={(event) => {\n                    handleChange(event, 'bio');\n                  }}\n                  disabled={!editAbout}\n                />\n              </FormGroup>\n\n              {editAbout && (\n                <FormGroup className=\"text-center\">\n                  <StateButton\n                    id=\"submitAndNextButton\"\n                    color=\"primary\"\n                    onClick={() => handleSubmitAbout(formValues)}\n                    next={() => {\n                      setEditAbout(false);\n                    }}\n                  >\n                    <IntlMessages id=\"forms.submit\" />\n                  </StateButton>\n                </FormGroup>\n              )}\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row>\n        <Colxx>\n          <FormGroup className=\"text-center\">\n            <Button\n              color=\"primary\"\n              disabled={editAbout}\n              className=\"m-3\"\n              href={`${adminRoot}/profile/education`}\n            >\n              <IntlMessages id=\"forms.next\" />\n            </Button>\n          </FormGroup>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ history, authUser }) => {\n  const { currentUser, profileData } = authUser;\n  return { currentUser, profileData, history };\n};\n\nconst mapActionsToProps = {};\n\nexport default connect(mapStateToProps, mapActionsToProps)(About);\n"],"sourceRoot":""}