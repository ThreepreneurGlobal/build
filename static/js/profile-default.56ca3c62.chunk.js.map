{"version":3,"sources":["containers/navs/Breadcrumb.js","hooks/use-request.js","components/common/RecentHack.js","hooks/use-fetch.js","views/app/profile/default/EditProfileActions.js","components/pages/SingleLightbox.js","views/app/profile/default/UserCard.js","views/app/profile/default/index.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","useRequest","url","method","data","headers","nextSuccess","nextError","useState","responseData","setData","loading","setLoading","error","setError","a","instance","response","success","log","getStatusText","status","getTypeText","RecentHack","participated","name","tagline","submit_status","hackathon_start","application_end","hackathon_website","hackathon_type_id","otherArray","history","useHistory","data1","setData1","isLoaded","setIsLoaded","getdetails","doRequest","requestLoading","requestError","useEffect","console","sdg","sdg_goals","mega","mega_trends","style","hackathon_winner","background","fontSize","onClick","push","role","aria-label","href","target","rel","item","src","alt","color","pill","outline","useFetch","refresh","message","fetchData","propTypes","PropTypes","string","isRequired","bool","EditProfileActions","Button","size","IntlMessages","SingleLightbox","thumb","large","isOpen","setIsOpen","location","mainSrc","onCloseRequest","UserCard","profileData","getProfileData","values","setValues","openUpload","setOpenUpload","formData","FormData","handleUpload","event","append","user_id","delete","timeout","getProfileDataAsync","window","reload","userSkills","other_skills","skillLength","Card","profile_photo","CardBody","bio","address","facebook","linkedin","instagram","github","skill","Modal","toggle","ModalHeader","ModalBody","InputGroup","CustomInput","type","accept","onChange","files","InputGroupAddon","addonType","connect","authUser","currentUser","getCurrentUser","user","setUser","fetch","then","res","json","userLength","Row","xxs","full_name","Breadcrumb","lg","hack","CardTitle","CardSubtitle"],"mappings":"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","file":"static/js/profile-default.56ca3c62.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      {match && <BreadcrumbItems match={match} />}\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/').filter(Boolean);\n\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import { useState } from 'react';\nimport instance from '../helpers/axiosInstance';\nimport { log } from '../helpers/Utils';\n\nconst useRequest = ({ url, method, data, headers, nextSuccess, nextError }) => {\n  const [responseData, setData] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const doRequest = async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      const response = await instance({\n        url,\n        method,\n        headers,\n        data,\n      });\n\n      if (response.data.success) {\n        if (nextSuccess) {\n          nextSuccess(response.data);\n        }\n        setLoading(false);\n        setData(response.data.data);\n      } else {\n        if (nextError) {\n          nextError(response.data.error);\n        }\n        setLoading(false);\n        setError(response.data.error);\n      }\n    } catch (err) {\n      log(err);\n      setLoading(false);\n      setError(err);\n    }\n  };\n\n  return [doRequest, loading, error, responseData];\n};\n\nexport default useRequest;\n","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardText,\n  CardTitle,\n  // NavLink,\n  Row,\n} from 'reactstrap';\nimport { adminRoot } from '../../constants/defaultValues';\nimport useRequest from '../../hooks/use-request';\nimport { log } from '../../helpers/Utils';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { Separator } from './CustomBootstrap';\n\nconst getStatusColor = (status) => {\n  if (status === 0) return 'outline-success';\n  if (status === 1) return 'outline-warning';\n  if (status === 'COMPLETED') return 'outline-danger';\n  return '';\n};\n\nconst getStatusText = (status) => {\n  if (status === 0) return 'UPCOMING';\n  if (status === 1) return 'ON GOING';\n  if (status === 2) return 'COMPLETED';\n  return 'primary';\n};\n\nconst getTypeText = (status) => {\n  if (status === 0) return 'Online';\n  if (status === 1) return 'Blender';\n  if (status === 2) return 'Offiline';\n  return '';\n};\n\nconst RecentHack = ({ data, participated }) => {\n  const {\n    id,\n    name,\n    tagline,\n    submit_status,\n    hackathon_start,\n    application_end,\n    hackathon_website,\n    hackathon_type_id,\n    otherArray,\n  } = data;\n\n  const history = useHistory();\n\n  const [data1, setData1] = useState({});\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const [doRequest, requestLoading, requestError] = useRequest({\n    url: `/getdetails/${data.id}`,\n    method: 'GET',\n\n    nextSuccess: (responseData) => {\n      setData1(responseData.getdetails);\n      setIsLoaded(true);\n    },\n  });\n\n  useEffect(() => {\n    doRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (requestLoading || !isLoaded) return <div className=\"loading\" />;\n\n  if (requestError) log(requestError);\n\n  console.log(data1);\n\n  let sdg = otherArray?.sdg_goals;\n  let mega = otherArray?.mega_trends;\n\n  if (sdg === false) {\n    sdg = null;\n  }\n  if (mega === false) {\n    mega = null;\n  }\n\n  return (\n    <Card style={data1.hackathon_winner.length > 0 ? { background: '#174F8F10' } : {}}>\n      {data1.hackathon_winner.length > 0 && (\n        <Button\n          className=\"mx-3\"\n          style={{ fontSize: '1rem' }}\n          onClick={() => history.push(`${adminRoot}/challenges/${id}/results`)}\n        >\n          <span role=\"img\" aria-label=\"popper\">\n            🎉\n          </span>{' '}\n          Results announced{' '}\n          <span role=\"img\" aria-label=\"popper\">\n            🎉\n          </span>\n        </Button>\n      )}\n      <CardBody>\n        <CardTitle>\n          <p className=\"h2 lead\">\n            <a\n              href={hackathon_website}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"new-tab\"\n            >\n              {name}\n            </a>\n          </p>\n          <CardSubtitle className=\"text-small\">{tagline}</CardSubtitle>\n        </CardTitle>\n\n        <Row className=\"justify-content-center\">\n          {sdg?.map((item) => (\n            <img\n              key={item.id}\n              src={`/assets/img/sdg/${item.id}.png`}\n              alt={item.name}\n              className=\"list-thumbnail align-self-center m-1 small hackcard-icon\"\n            />\n          ))}\n          |{/* <div className=\"vertical\" style={{ height: '45px' }} /> */}\n          {mega?.map((item) => (\n            <img\n              key={item.id}\n              src={`/assets/img/mega-trends/${item.id}.png`}\n              alt={item.name}\n              className=\"list-thumbnail align-self-center m-1 small hackcard-icon\"\n            />\n          ))}\n        </Row>\n\n        <Separator className=\"my-4\" />\n\n        <CardTitle>\n          <IntlMessages id=\"Application Start\" />\n          <CardText>{application_end}</CardText>\n        </CardTitle>\n\n        <CardTitle>\n          <IntlMessages id=\"hackathon start date\" />\n          <CardText>{hackathon_start}</CardText>\n        </CardTitle>\n\n        <Separator className=\"mb-4\" />\n\n        <Badge\n          color={getStatusColor(submit_status)}\n          pill\n          outline\n          className=\"mb-3 mr-3\"\n        >\n          {getStatusText(submit_status)}\n        </Badge>\n\n        <Badge color=\"outline-primary\" pill className=\"mb-3\">\n          {getTypeText(hackathon_type_id)}\n        </Badge>\n\n        <Row className=\"justify-content-center\">\n          {!data1.hackathon_winner.length > 0 ? (\n            <>\n              {participated ? (\n              <Button\n                color=\"secondary\"\n                className=\"m-1\"\n                onClick={() =>\n                  history.push(`${adminRoot}/challenges/${id}/submission`)\n                }\n              >\n                <IntlMessages id=\"Submit your hack\" />\n              </Button>\n              ) : (\n              <Button\n                color=\"secondary\"\n                className=\"m-1\"\n                onClick={() =>\n                  history.push(`${adminRoot}/challenges/register/${id}`)\n                }\n              >\n                <IntlMessages id=\"hackcard.participate-button\" />\n              </Button>\n              )}\n            </>\n          ) : (\n            <></>\n          )}\n          <Button\n            color=\"secondary\"\n            className=\"m-1\"\n            onClick={() => history.push(`${adminRoot}/challenges/${id}`)}\n          >\n            <IntlMessages id=\"hackcard.view-details\" />\n          </Button>\n        </Row>\n\n        {/* <pre>{JSON.stringify(data, null, 2)}</pre> */}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default RecentHack;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport instance from '../helpers/axiosInstance';\n\nconst useFetch = (url, refresh = false, name = 'data') => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    if (!url) {\n      setError('Please Provide a Uri!');\n      return;\n    }\n\n    if (refresh) {\n      setData(false);\n    }\n\n    const fetchData = async () => {\n      try {\n        const response = await instance({\n          method: 'GET',\n          url,\n        });\n\n        if (response.data.success) {\n          setData(response.data[name]);\n        } else {\n          setError(response.data.message);\n        }\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  return { loading, data, error };\n};\n\nexport default useFetch;\n\nuseFetch.propTypes = {\n  url: PropTypes.string.isRequired,\n  refresh: PropTypes.bool,\n};\n","import React from 'react';\nimport { Button } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\nimport { adminRoot } from '../../../../constants/defaultValues';\nimport IntlMessages from '../../../../helpers/IntlMessages';\n\nconst EditProfileActions = () => {\n  const history = useHistory();\n  return (\n    <div className=\"top-right-button-container\">\n      <Button\n        color=\"primary\"\n        size=\"sm\"\n        onClick={() => history.push(`${adminRoot}/profile/about`)}\n      >\n        <IntlMessages id=\"user.edit-profile\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default EditProfileActions;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Lightbox from 'react-image-lightbox';\n\nconst SingleLightbox = ({ thumb, className, large }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <NavLink to=\"#\" location={{}} onClick={() => setIsOpen(true)}>\n        <img src={thumb} alt=\"thumbnail\" className={className} />\n      </NavLink>\n\n      {isOpen && (\n        <Lightbox mainSrc={large} onCloseRequest={() => setIsOpen(false)} />\n      )}\n    </>\n  );\n};\nexport default SingleLightbox;\n","import React, { useState } from 'react';\nimport {\n  // Badge,\n  Card,\n  Button,\n  CardBody,\n  NavLink as Link,\n  Modal,\n  ModalBody,\n  InputGroupAddon,\n  CustomInput,\n  InputGroup,\n  ModalHeader,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport SingleLightbox from '../../../../components/pages/SingleLightbox';\nimport { adminRoot } from '../../../../constants/defaultValues';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { getProfileData, getProfileDataAsync } from '../../../../helpers/Utils';\nimport instance from '../../../../helpers/axiosInstance';\n\nconst UserCard = () => {\n  const profileData = getProfileData();\n  const [values, setValues] = useState({});\n  const [openUpload, setOpenUpload] = useState(false);\n\n  const formData = new FormData();\n\n  const handleFileChange = (event) => {\n    setValues({ ...values, [event.target.id]: event.target.files[0] });\n  };\n\n  const handleUpload = async (event) => {\n    console.log(profileData);\n    formData.append('id', profileData.id);\n    formData.append('user_id', profileData.user_id);\n    formData.delete(event.target.id);\n\n    formData.append(`${event.target.id}`, values[event.target.id]);\n\n    await instance({\n      url: '/updateProfile',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      data: formData,\n      timeout: 100000,\n    });\n\n    await getProfileDataAsync(profileData?.user_id);\n    setOpenUpload(false);\n    window.location.reload();\n  };\n\n  const skillStr = profileData.other_skills;\n  const userSkills = skillStr.split(\";\");\n  const skillLength = userSkills ? userSkills.length : 0;\n\n  return (\n    <Card className=\"mb-4\">\n      <div className=\"position-absolute card-top-buttons\">\n        <Button\n          outline\n          color=\"primary\"\n          className=\"icon-button\"\n          onClick={() => setOpenUpload(true)}\n        >\n          <i className=\"simple-icon-pencil\" />\n        </Button>\n      </div>\n\n      {profileData?.profile_photo && (\n        <SingleLightbox\n          thumb={profileData?.profile_photo}\n          large={profileData?.profile_photo}\n          className=\"card-img-top\"\n        />\n      )}\n\n      <CardBody>\n        <p className=\"text-muted text-small\">\n          <IntlMessages id=\"menu.about\" />\n        </p>\n\n        <p className=\"mb-3\">\n          {profileData?.bio || (\n            <NavLink to={`${adminRoot}/profile/about`}>\n              {profileData?.bio}\n            </NavLink>\n          )}\n        </p>\n        {/* \n        <p className=\"text-muted text-small mb-2\">\n          <IntlMessages id=\"pages.location\" />\n        </p> */}\n\n        <p className=\"mb-3\">\n          {profileData?.address || (\n            <NavLink to={`${adminRoot}/profile/contact`}>\n              {profileData?.address}\n            </NavLink>\n          )}\n        </p>\n\n        {/* <p className=\"text-muted text-small mb-2\">\n          <IntlMessages id=\"pages.responsibilities\" />\n        </p>\n\n        <p className=\"mb-3\">\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\n            FRONTEND\n          </Badge>\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\n            JAVASCRIPT\n          </Badge>\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\n            SECURITY\n          </Badge>\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\n            DESIGN\n          </Badge>\n        </p> */}\n\n        <p className=\"text-muted text-small mb-2\">\n          <IntlMessages id=\"menu.contact\" />\n        </p>\n\n        <div className=\"social-icons\">\n          <ul className=\"list-unstyled list-inline\">\n            <li className=\"list-inline-item\">\n              <Link href={profileData?.facebook} target=\"_blank\">\n                <i className=\"simple-icon-social-facebook\" />\n              </Link>\n            </li>\n            <li className=\"list-inline-item\">\n              <Link href={profileData?.linkedin}>\n                <i className=\"simple-icon-social-linkedin\" />\n              </Link>\n            </li>\n            <li className=\"list-inline-item\">\n              <Link href={profileData?.instagram} target=\"_blank\">\n                <i className=\"simple-icon-social-instagram\" />\n              </Link>\n            </li>\n            <li className=\"list-inline-item\">\n              <Link href={profileData?.github} target=\"_blank\">\n                <i className=\"simple-icon-social-github\" />\n              </Link>\n            </li>\n          </ul>\n        </div>\n\n        <p className=\"text-muted text-small mb-2\">\n          <IntlMessages id=\"menu.skills\" />\n        </p>\n        <div>\n          <ul className=\"list-unstyled list-inline\">\n            {skillLength ? (\n              userSkills.map((skill)=>{\n                return <li className=\"list-inline-item\" key=\"1\"><span className=\"badge badge-pill badge-dark py-2 px-4\">{skill}</span></li>\n              })\n            ) : (\n              <li className=\"list-inline-item\"><p>Skills not added</p></li>\n            )}\n          </ul>\n        </div>\n      </CardBody>\n    \n      <Modal isOpen={openUpload} toggle={() => setOpenUpload(!openUpload)}>\n        <ModalHeader>\n          <IntlMessages id=\"user.upload-profile-photo\" />\n        </ModalHeader>\n\n        <ModalBody>\n          <InputGroup>\n            <CustomInput\n              type=\"file\"\n              id=\"profile_photo\"\n              name=\"customFile\"\n              accept=\"image/jpeg, image/jpg, image/png\"\n              onChange={handleFileChange}\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button\n                outline\n                color=\"secondary\"\n                id=\"profile_photo\"\n                onClick={handleUpload}\n              >\n                <IntlMessages id=\"user.upload-button\" />\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </ModalBody>\n      </Modal>\n    </Card>\n  );\n};\n\nexport default UserCard;","import React ,{useEffect ,useState} from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Row,\n} from 'reactstrap';\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\nimport { Colxx } from '../../../../components/common/CustomBootstrap';\nimport RecentHack from '../../../../components/common/RecentHack';\nimport EditProfileActions from './EditProfileActions';\nimport UserCard from './UserCard';\nimport useFetch from '../../../../hooks/use-fetch';\nimport { getCurrentUser, log } from '../../../../helpers/Utils';\nimport { adminRoot } from '../../../../constants/defaultValues';\nimport IntlMessages from '../../../../helpers/IntlMessages';\n\nconst ProfileView = ({ match, currentUser, profileData }) => {\n  const { id } = getCurrentUser();\n  // const { uid } = getProfileData();\n  const [user, setUser] = useState();\n  const { loading, data, error } = useFetch(`${id}`);\n\n  useEffect(() => {\n    fetch(`http://api.smart-natives.de/index.php/api/userhackathonlist/${id}`)\n    .then(res => {\n      return res.json();\n    })\n    .then(data1 => {\n    setUser(data1);\n    });\n  }, [id]);\n\n  if (loading) return <div className=\"loading\" />;\n\n  if (error) log(error);\n  console.log(user);\n  console.log(id);\n  console.log(currentUser);\n  console.log(profileData);\n\n  const userLength = user ? user.length : 0;\n\n  \n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Row>\n            <Colxx className=\"mb-0\">\n              <h1>{profileData?.full_name}</h1>\n              <EditProfileActions />\n            </Colxx>\n          </Row>\n\n          <Breadcrumb match={match} />\n\n          <Row>\n            <Colxx xxs=\"12\" lg=\"5\" className=\"mb-4 col-left\">\n              <UserCard currentUser={currentUser} />\n            </Colxx>\n\n            <Colxx xxs=\"12\" lg=\"7\" className=\"mb-4 col-right\">\n              <Row>\n                {userLength ? (\n                  user.map((hack) => {\n                    return (\n                      <Colxx xxs=\"12\" lg=\"6\" className=\"mb-4\" key={hack.id}>\n                        <RecentHack data={hack} />\n                      </Colxx>\n                    );\n                  })\n                ) : (\n                  <Colxx xxs=\"12\">\n                    <Card className=\"text-center\">\n                      <CardBody>\n                        <CardTitle className=\"mb-0\">\n                          You have applied to{data.length}\n                        </CardTitle>\n\n                        <div className=\"display-1\">{user.length}</div>\n                        <CardSubtitle>Hackathons</CardSubtitle>\n\n                        <div>\n                          <Button\n                            href={`${adminRoot}/challenges/explore`}\n                            color=\"primary\"\n                          >\n                            <IntlMessages id=\"challenges.explore-all\" />\n                          </Button>\n                        </div>\n                      </CardBody>\n                    </Card>\n                  </Colxx>\n                )}\n              </Row>\n            </Colxx>\n          </Row>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ authUser }) => {\n  const { currentUser, profileData } = authUser;\n  return { currentUser, profileData };\n};\n\nconst mapActionsToProps = {};\n\nexport default connect(mapStateToProps, mapActionsToProps)(ProfileView);"],"sourceRoot":""}