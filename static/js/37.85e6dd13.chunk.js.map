{"version":3,"sources":["containers/navs/Breadcrumb.js","hooks/use-request.js","components/application/SingleLightbox.js","containers/application/InputDisplay.js","views/app/challenges/details/components/basics.js","views/app/challenges/details/components/links.js","views/app/challenges/details/components/dates.js","components/cards/FaqCard.js","views/app/challenges/details/components/faq.js","components/common/Rating.js","views/app/challenges/details/components/feedback.js","views/app/challenges/details/components/prizes.js","components/cards/SubmissionCard.js","views/app/challenges/details/components/submission.js","views/app/challenges/details/NavItems.js","views/app/challenges/details/components/application.js","components/cards/JudgeCard.js","components/cards/SponsorCard.js","views/app/challenges/details/TabPanes.js","views/app/challenges/details/components/HackDetails.js","views/app/challenges/details/index.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","useRequest","url","method","data","headers","nextSuccess","nextError","useState","responseData","setData","loading","setLoading","error","setError","a","instance","response","success","log","SingleLightbox","thumb","large","isOpen","setIsOpen","isImg","console","location","onClick","alt","src","img","width","mainSrc","onCloseRequest","InputDisplay","messageId","name","value","intputType","FormGroup","Label","IntlMessages","Input","type","disabled","proptype","PropTypes","string","isRequired","any","BasicsNavItem","activeTab","setActiveTab","NavItem","NavLink","classNames","BasicsTabPane","hackathon","TabPane","tabId","CardBody","tagline","about","max_team_size","LinksNavItem","LinksTabPane","Row","sm","hackathon_website","portfolio_url","contact_email","link_to_code_of_control","facebook","twitter","instagram","linkedin","DatesNavItem","DatesTabPane","application_start","application_end","hackathon_start","hackathon_date","results_date","FaqCard","setShowIndex","showingIndex","item","Card","Button","color","aria-expanded","question","Collapse","dangerouslySetInnerHTML","__html","answer","FaqNavItem","FaqTabPane","Faq","xxs","Star","props","starProps","nameMap","isDisabled","isActive","isActiveHalf","willBeActive","Object","keys","prop","join","defaultProps","Rating","FeedbackNavItem","ConnectFeedBackTabPane","connect","profileData","authUser","user_id","hackathon_id","comment","star","values","setValues","NotificationManager","doRequest","requestLoading","rows","onChange","event","target","total","rating","onRate","PrizesNavItem","PrizesTabPane","prizes","Badge","pill","SubmissionCard","profile_photo","CardSubtitle","full_name","CardText","contact_no","href","video_file","SubmissionNavItem","SubmissionTabPane","submission","user","history","useHistory","useParams","push","NavItems","Nav","tabs","ApplicationTabPane","applicationData","applicationAboutData","hackthonApplication","includes","applicationContactData","contact","applicationEducationData","education","applicationExpericeData","experience","applicationOnlineProfileData","online_profiles","key","JudgeCard","profile_url","job_title","SponsorCard","logo","TabPanes","hackInfo","getCurrentUser","sponsors","judges","application","TabContent","hackathon_submission","HackDetails","Details","params","isLoaded","setIsLoaded","getdetails","requestError","useEffect","Breadcrumb","hackathon_cover_img","md","hackathon_logo","CardHeader"],"mappings":"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","file":"static/js/37.85e6dd13.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub) => {\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      {match && <BreadcrumbItems match={match} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/').filter(Boolean);\r\n\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import { useState } from 'react';\r\nimport instance from '../helpers/axiosInstance';\r\nimport { log } from '../helpers/Utils';\r\n\r\nconst useRequest = ({ url, method, data, headers, nextSuccess, nextError }) => {\r\n  const [responseData, setData] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const doRequest = async () => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n      const response = await instance({\r\n        url,\r\n        method,\r\n        headers,\r\n        data,\r\n      });\r\n\r\n      if (response.data.success) {\r\n        if (nextSuccess) {\r\n          nextSuccess(response.data);\r\n        }\r\n        setLoading(false);\r\n        setData(response.data.data);\r\n      } else {\r\n        if (nextError) {\r\n          nextError(response.data.error);\r\n        }\r\n        setLoading(false);\r\n        setError(response.data.error);\r\n      }\r\n    } catch (err) {\r\n      log(err);\r\n      setLoading(false);\r\n      setError(err);\r\n    }\r\n  };\r\n\r\n  return [doRequest, loading, error, responseData];\r\n};\r\n\r\nexport default useRequest;\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport img from \"../../assets/img/profiles/profile.png\";\r\n\r\nconst SingleLightbox = ({ thumb, className, large }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  let isImg = false;\r\n  if(thumb !== null)\r\n  {\r\n    isImg = true;\r\n  }\r\n  console.log(thumb);\r\n  return (\r\n    <>\r\n      <NavLink to=\"#\" location={{}} onClick={() => setIsOpen(true)}>\r\n        <img \r\n          alt=\"Not Found\"\r\n          src={isImg?thumb:img}\r\n          className={className} \r\n          width=\"500\" \r\n        />\r\n      </NavLink>\r\n      {isOpen && (\r\n        <Lightbox mainSrc={large} onCloseRequest={() => setIsOpen(false)} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default SingleLightbox;\r\n","import React from 'react';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst InputDisplay = ({ messageId, name, value, intputType = 'text' }) => {\r\n  return (\r\n    <FormGroup className=\"mb-2 mt-4\">\r\n      <Label className=\"lead\">\r\n        <IntlMessages id={messageId} />\r\n      </Label>\r\n\r\n      <Input\r\n        type={intputType}\r\n        className=\"form-control\"\r\n        name={name}\r\n        value={value}\r\n        disabled\r\n      />\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nInputDisplay.proptype = {\r\n  messageId: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n  intputType: PropTypes.string,\r\n};\r\n\r\nexport default InputDisplay;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { CardBody, NavItem, NavLink, TabPane } from 'reactstrap';\r\nimport InputDisplay from '../../../../../containers/application/InputDisplay';\r\nimport IntlMessages from '../../../../../helpers/IntlMessages';\r\n\r\nexport const BasicsNavItem = ({ activeTab, setActiveTab }) => (\r\n  <NavItem>\r\n    <NavLink\r\n      className={classNames({\r\n        active: activeTab === 'basics',\r\n        'nav-link': true,\r\n      })}\r\n      onClick={() => setActiveTab('basics')}\r\n      to=\"#\"\r\n      location={{}}\r\n    >\r\n      <IntlMessages id=\"menu.details\" />\r\n    </NavLink>\r\n  </NavItem>\r\n);\r\n\r\nexport const BasicsTabPane = ({ hackathon }) => (\r\n  <TabPane tabId=\"basics\">\r\n    <CardBody>\r\n      <InputDisplay\r\n        messageId=\"challenges.hackathon-name\"\r\n        name=\"hackathon-name\"\r\n        value={hackathon.name}\r\n      />\r\n\r\n      <InputDisplay\r\n        messageId=\"challenges.hackathon-tagline\"\r\n        name=\"hackathon-tagline\"\r\n        value={hackathon.tagline}\r\n      />\r\n\r\n      <InputDisplay\r\n        messageId=\"challenges.about\"\r\n        name=\"hackathon-about\"\r\n        value={hackathon.about}\r\n        intputType=\"textarea\"\r\n      />\r\n\r\n      <InputDisplay\r\n        messageId=\"challenges.max-team-size\"\r\n        name=\"max-team-size\"\r\n        value={hackathon.max_team_size}\r\n      />\r\n    </CardBody>\r\n  </TabPane>\r\n);\r\n","import React from 'react';\r\nimport { CardBody, NavItem, NavLink, Row, TabPane } from 'reactstrap';\r\nimport classNames from 'classnames';\r\nimport IntlMessages from '../../../../../helpers/IntlMessages';\r\nimport { Colxx } from '../../../../../components/common/CustomBootstrap';\r\nimport InputDisplay from '../../../../../containers/application/InputDisplay';\r\n\r\nexport const LinksNavItem = ({ activeTab, setActiveTab }) => (\r\n  <NavItem>\r\n    <NavLink\r\n      className={classNames({\r\n        active: activeTab === 'links',\r\n        'nav-link': true,\r\n      })}\r\n      onClick={() => setActiveTab('links')}\r\n      to=\"#\"\r\n      location={{}}\r\n    >\r\n      <IntlMessages id=\"menu.links\" />\r\n    </NavLink>\r\n  </NavItem>\r\n);\r\n\r\nexport const LinksTabPane = ({ hackathon }) => (\r\n  <TabPane tabId=\"links\">\r\n    <Row>\r\n      <Colxx sm=\"12\">\r\n        <CardBody>\r\n          <InputDisplay\r\n            messageId=\"challenges.hackathon-website\"\r\n            name=\"hackathon-website\"\r\n            value={hackathon.hackathon_website}\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.portfolio-url\"\r\n            name=\"portfolio-url\"\r\n            value={hackathon.portfolio_url}\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.contact-email\"\r\n            name=\"contact-email\"\r\n            value={hackathon.contact_email}\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.link-to-code-of-control\"\r\n            name=\"link-to-code-of-control\"\r\n            value={hackathon.link_to_code_of_control}\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.facebook\"\r\n            name=\"facebook\"\r\n            value={hackathon.facebook}\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.twitter\"\r\n            name=\"twitter\"\r\n            value={hackathon.twitter}\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.instagram\"\r\n            name=\"instagram\"\r\n            value={hackathon.instagram}\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.linkedin\"\r\n            name=\"linkedin\"\r\n            value={hackathon.linkedin}\r\n          />\r\n        </CardBody>\r\n      </Colxx>\r\n    </Row>\r\n  </TabPane>\r\n);\r\n","import React from 'react';\r\nimport { CardBody, NavItem, NavLink, Row, TabPane } from 'reactstrap';\r\nimport classNames from 'classnames';\r\nimport IntlMessages from '../../../../../helpers/IntlMessages';\r\nimport { Colxx } from '../../../../../components/common/CustomBootstrap';\r\nimport InputDisplay from '../../../../../containers/application/InputDisplay';\r\n\r\nexport const DatesNavItem = ({ activeTab, setActiveTab }) => (\r\n  <NavItem>\r\n    <NavLink\r\n      className={classNames({\r\n        active: activeTab === 'dates',\r\n        'nav-link': true,\r\n      })}\r\n      onClick={() => setActiveTab('dates')}\r\n      to=\"#\"\r\n      location={{}}\r\n    >\r\n      <IntlMessages id=\"menu.dates\" />\r\n    </NavLink>\r\n  </NavItem>\r\n);\r\n\r\nexport const DatesTabPane = ({ hackathon }) => (\r\n  <TabPane tabId=\"dates\">\r\n    <Row>\r\n      <Colxx sm=\"12\">\r\n        <CardBody>\r\n          <InputDisplay\r\n            messageId=\"challenges.hackthon-application-begins\"\r\n            name=\"application-start\"\r\n            value={hackathon.application_start}\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.hackthon-application-ends\"\r\n            name=\"application-ends\"\r\n            value={hackathon.application_end}\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.hackthon-hackathon-begins\"\r\n            name=\"hackathon-starts\"\r\n            value={hackathon.hackathon_start}\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.hackthon-hackathon-ends\"\r\n            name=\"hackathon-ends\"\r\n            value={hackathon.hackathon_date}\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.announcement-results\"\r\n            name=\"accouncement-date\"\r\n            value={hackathon.results_date}\r\n          />\r\n\r\n          {/* <InputDisplay\r\n            messageId=\"challenges.timezone\"\r\n            name=\"timezone\"\r\n            value={hackathon.timezone}\r\n          /> */}\r\n        </CardBody>\r\n      </Colxx>\r\n    </Row>\r\n  </TabPane>\r\n);\r\n","/* eslint-disable react/no-danger */\r\nimport React from 'react';\r\nimport { Button, Card, Collapse } from 'reactstrap';\r\n\r\nconst FaqCard = ({ index, setShowIndex, showingIndex, item }) => {\r\n  return (\r\n    <Card className=\"d-flex mb-2\">\r\n      <div className=\"d-flex flex-grow-1 min-width-zero\">\r\n        <Button\r\n          color=\"link\"\r\n          className=\"card-body btn-empty btn-link list-item-heading text-left text-one\"\r\n          onClick={() => setShowIndex(index)}\r\n          aria-expanded={showingIndex === index}\r\n        >\r\n          {item.question}\r\n        </Button>\r\n      </div>\r\n      <Collapse isOpen={showingIndex === index}>\r\n        <div\r\n          className=\"card-body accordion-content pt-0\"\r\n          dangerouslySetInnerHTML={{ __html: item.answer }}\r\n        />\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FaqCard;\r\n","import React, { useState } from 'react';\r\n\r\nimport { NavItem, NavLink, TabPane } from 'reactstrap';\r\nimport classNames from 'classnames';\r\nimport IntlMessages from '../../../../../helpers/IntlMessages';\r\nimport { Colxx } from '../../../../../components/common/CustomBootstrap';\r\nimport FaqCard from '../../../../../components/cards/FaqCard';\r\n\r\nexport const FaqNavItem = ({ activeTab, setActiveTab }) => (\r\n  <NavItem>\r\n    <NavLink\r\n      className={classNames({\r\n        active: activeTab === 'faq',\r\n        'nav-link': true,\r\n      })}\r\n      onClick={() => setActiveTab('faq')}\r\n      to=\"#\"\r\n      location={{}}\r\n    >\r\n      <IntlMessages id=\"menu.faq\" />\r\n    </NavLink>\r\n  </NavItem>\r\n);\r\nexport const FaqTabPane = ({ Faq }) => {\r\n  const [showingIndex, setShowIndex] = useState(0);\r\n  return (\r\n    <TabPane tabId=\"faq\">\r\n      <Colxx xxs=\"12\" className=\"mt-4\">\r\n        {Faq.map((item, index) => (\r\n          <FaqCard\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            key={`faqItem_${index}`}\r\n            item={item}\r\n            index={index}\r\n            showingIndex={showingIndex}\r\n            setShowIndex={setShowIndex}\r\n          />\r\n        ))}\r\n      </Colxx>\r\n    </TabPane>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Rater from 'react-rater';\r\nimport 'react-rater/lib/react-rater.css';\r\n\r\nconst Rating = (props) => (\r\n  <Rater {...props}>\r\n    <Star />\r\n  </Rater>\r\n);\r\n\r\nconst Star = (props) => {\r\n  const starProps = { ...props };\r\n  const nameMap = {\r\n    isDisabled: 'is-disabled',\r\n    isActive: 'is-active',\r\n    isActiveHalf: 'is-active-half',\r\n    willBeActive: 'will-be-active',\r\n  };\r\n\r\n  const className = Object.keys(nameMap)\r\n    // eslint-disable-next-line\r\n    .filter((prop) => (delete starProps[prop], props[prop]))\r\n    .map((prop) => nameMap[prop])\r\n    .join(' ');\r\n  return <div className={`react-rater-star ${className}`} {...starProps} />;\r\n};\r\n\r\nStar.defaultProps = {\r\n  willBeActive: false,\r\n  isActive: false,\r\n  isActiveHalf: false,\r\n  isDisabled: false,\r\n};\r\n\r\nStar.propTypes = {\r\n  isActive: PropTypes.bool,\r\n  isActiveHalf: PropTypes.bool,\r\n  willBeActive: PropTypes.bool,\r\n  isDisabled: PropTypes.bool,\r\n};\r\n\r\nexport default Rating;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  CardBody,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  NavItem,\r\n  NavLink,\r\n  TabPane,\r\n} from 'reactstrap';\r\nimport classNames from 'classnames';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Colxx } from '../../../../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../../../../helpers/IntlMessages';\r\nimport Rating from '../../../../../components/common/Rating';\r\nimport useRequest from '../../../../../hooks/use-request';\r\nimport NotificationManager from '../../../../../components/common/react-notifications/NotificationManager';\r\n\r\nconst FeedbackNavItem = ({ activeTab, setActiveTab }) => (\r\n  <NavItem>\r\n    <NavLink\r\n      className={classNames({\r\n        active: activeTab === 'feedback',\r\n        'nav-link': true,\r\n      })}\r\n      onClick={() => setActiveTab('feedback')}\r\n      to=\"#\"\r\n      location={{}}\r\n    >\r\n      <IntlMessages id=\"menu.feedback\" />\r\n    </NavLink>\r\n  </NavItem>\r\n);\r\n\r\nconst FeedbackTabPane = ({ profileData, hackathon }) => {\r\n  const [values, setValues] = useState({\r\n    user_id: profileData.id,\r\n    hackathon_id: hackathon.id,\r\n    comment: '',\r\n    star: 0,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.id]: event.target.value });\r\n  };\r\n\r\n  const [doRequest, requestLoading] = useRequest({\r\n    url: '/addFeedback',\r\n    method: 'POST',\r\n    data: values,\r\n    nextSuccess: () => {\r\n      NotificationManager.success(\r\n        'Feedback submitted successfully!',\r\n        'Feedback Success',\r\n        3000,\r\n        null,\r\n        null,\r\n        ''\r\n      );\r\n      // refresh(accessToken, id);\r\n    },\r\n    nextError: (error) => {\r\n      NotificationManager.error(error, 'Feedback Error', 3000, null, null, '');\r\n    },\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    doRequest();\r\n  };\r\n\r\n  return (\r\n    <TabPane tabId=\"feedback\">\r\n      <Colxx xxs=\"12\" className=\"mt-4\">\r\n        <CardBody>\r\n          <FormGroup className=\"mb-4\">\r\n            <Label>\r\n              <IntlMessages id=\"menu.feedback\" />\r\n            </Label>\r\n            <Input\r\n              id=\"comment\"\r\n              type=\"textarea\"\r\n              rows=\"6\"\r\n              value={values.comment}\r\n              onChange={handleChange}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label>\r\n              <IntlMessages id=\"challenges.rating\" />\r\n            </Label>\r\n            <Rating\r\n              total={5}\r\n              rating={values.star}\r\n              onRate={({ rating }) => {\r\n                setValues({ ...values, star: rating });\r\n              }}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup className=\"text-center\">\r\n            <Button\r\n              id=\"submit-basics\"\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              className={`btn-shadow btn-multiple-state ${\r\n                requestLoading ? 'show-spinner' : ''\r\n              }`}\r\n              onClick={handleSubmit}\r\n            >\r\n              <span className=\"spinner d-inline-block\">\r\n                <span className=\"bounce1\" />\r\n                <span className=\"bounce2\" />\r\n                <span className=\"bounce3\" />\r\n              </span>\r\n              <span className=\"label\">\r\n                <IntlMessages id=\"forms.submit\" />\r\n              </span>\r\n            </Button>\r\n          </FormGroup>\r\n        </CardBody>\r\n      </Colxx>\r\n    </TabPane>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { profileData } = authUser;\r\n\r\n  return { profileData };\r\n};\r\n\r\nconst ConnectFeedBackTabPane = connect(mapStateToProps, {})(FeedbackTabPane);\r\n\r\nexport { FeedbackNavItem, ConnectFeedBackTabPane as FeedbackTabPane };\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Badge, CardBody, NavItem, NavLink, Row, TabPane } from 'reactstrap';\r\nimport { Colxx } from '../../../../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../../../../helpers/IntlMessages';\r\n\r\nexport const PrizesNavItem = ({ activeTab, setActiveTab }) => {\r\n  return (\r\n    <NavItem>\r\n      <NavLink\r\n        className={classNames({\r\n          active: activeTab === 'prizes',\r\n          'nav-link': true,\r\n        })}\r\n        onClick={() => setActiveTab('prizes')}\r\n        to=\"#\"\r\n        location={{}}\r\n      >\r\n        <IntlMessages id=\"menu.prizes\" />\r\n      </NavLink>\r\n    </NavItem>\r\n  );\r\n};\r\n\r\nexport const PrizesTabPane = ({ prizes }) => (\r\n  <TabPane tabId=\"prizes\">\r\n    <Row>\r\n      <Colxx sm=\"12\">\r\n        <CardBody>\r\n          {prizes.map((item) => (\r\n            <Badge key={item.id} color=\"outline-primary\" pill className=\"m-2\">\r\n              <IntlMessages id={item.name} />\r\n            </Badge>\r\n          ))}\r\n        </CardBody>\r\n      </Colxx>\r\n    </Row>\r\n  </TabPane>\r\n);\r\n","import React from 'react';\r\nimport { /* Button, */ Card, CardBody, CardSubtitle, CardText } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport img from \"../../assets/img/profiles/profile.png\";\r\n\r\nconst SubmissionCard = ({ data }) => {\r\n  let isImg = false;\r\n  if(data?.profile_photo?.match(/\\.(jpeg|jpg|gif|png)$/) !== null)\r\n  {\r\n    isImg = true;\r\n  }\r\n  return (\r\n    <Card className=\"d-flex flex-row mb-4\">\r\n      <NavLink to={data.url} className=\"d-flex\">\r\n        <img src={isImg?data.profile_photo:img} alt=\"Not Found\" width=\"100px\" className=\"m-4\" />\r\n      </NavLink>\r\n      <div className=\" d-flex flex-grow-1 min-width-zero\">\r\n        <CardBody className=\" pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n          <div className=\"min-width-zero\">\r\n            <NavLink to={data.url}>\r\n              <CardSubtitle className=\"truncate mb-1\">{data.full_name}</CardSubtitle>\r\n            </NavLink>\r\n            <CardText className=\"text-muted text-small mb-2\">\r\n              {data.contact_no}\r\n            </CardText>\r\n            <CardText className=\"theme-color-blueyale mb-2\">\r\n              <a href={data.url} className=\"theme-color-bluenavy\">Solution Link</a>\r\n\r\n            </CardText>\r\n            <CardText className=\" mb-2\">\r\n              <a href={data.video_file} className=\"theme-color-bluenavy\">Solution video File</a>\r\n            </CardText>\r\n            {/* <Button outline size=\"xs\" color=\"danger\">\r\n              Remove\r\n            </Button> */}\r\n          </div>\r\n        </CardBody>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SubmissionCard;\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  NavItem,\r\n  NavLink,\r\n  TabPane,\r\n} from 'reactstrap';\r\nimport {\r\n  Colxx,\r\n  Separator,\r\n} from '../../../../../components/common/CustomBootstrap';\r\nimport { adminRoot } from '../../../../../constants/defaultValues';\r\nimport IntlMessages from '../../../../../helpers/IntlMessages';\r\nimport SubmissionCard from '../../../../../components/cards/SubmissionCard';\r\n\r\nconst SubmissionNavItem = ({ activeTab, setActiveTab }) => {\r\n  return (\r\n    <NavItem>\r\n      <NavLink\r\n        className={classNames({\r\n          active: activeTab === 'submission',\r\n          'nav-link': true,\r\n        })}\r\n        onClick={() => setActiveTab('submission')}\r\n        to=\"#\"\r\n        location={{}}\r\n      >\r\n        <IntlMessages id=\"menu.submission\" />\r\n      </NavLink>\r\n    </NavItem>\r\n  );\r\n};\r\n\r\n\r\nconst SubmissionTabPane = ({submission, user}) => {\r\n const history = useHistory();\r\n  const { id } = useParams();\r\n  return (\r\n    <TabPane tabId=\"submission\">\r\n      <Colxx xxs=\"12\" className=\"mt-4\">\r\n        <CardBody className=\"\">\r\n          <FormGroup className=\"mb-4 d-flex justify-content-between\">\r\n            <Label className=\"lead\">\r\n              <IntlMessages id=\"menu.submission\" />\r\n            </Label>\r\n\r\n            <Button\r\n              onClick={() =>\r\n                history.push(`${adminRoot}/challenges/${id}/submission`)\r\n              }\r\n            >\r\n              Submit New\r\n            </Button>\r\n          </FormGroup>\r\n\r\n          <Separator className=\"my-4\" />\r\n\r\n          <FormGroup>\r\n            <Label className=\"h5\">Your Submissions </Label>\r\n          </FormGroup>\r\n\r\n          {submission.map((item) =>{\r\n            if (item.user_id === user) {\r\n              return (\r\n                  <SubmissionCard\r\n                    key={item.id} \r\n                    data={item} \r\n                  />\r\n                );\r\n            }\r\n            return null;\r\n          })}\r\n        </CardBody>\r\n      </Colxx>\r\n    </TabPane>\r\n  );\r\n};\r\n\r\nexport { SubmissionTabPane, SubmissionNavItem };\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\nimport { BasicsNavItem } from './components/basics';\r\nimport { LinksNavItem } from './components/links';\r\n// import { BrandsNavItem } from './components/brands';\r\nimport { DatesNavItem } from './components/dates';\r\nimport { FaqNavItem } from './components/faq';\r\nimport { FeedbackNavItem } from './components/feedback';\r\nimport { PrizesNavItem } from './components/prizes';\r\nimport { SubmissionNavItem } from './components/submission';\r\n\r\nconst NavItems = ({ activeTab, setActiveTab }) => {\r\n  return (\r\n    <Nav tabs className=\"card-header-tabs\">\r\n      <BasicsNavItem activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n      <LinksNavItem activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n      {/* <BrandsNavItem activeTab={activeTab} setActiveTab={setActiveTab} /> */}\r\n\r\n      <DatesNavItem activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n      <PrizesNavItem activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n      <NavItem>\r\n        <NavLink\r\n          className={classNames({\r\n            active: activeTab === 'judges',\r\n            'nav-link': true,\r\n          })}\r\n          onClick={() => setActiveTab('judges')}\r\n          to=\"#\"\r\n          location={{}}\r\n        >\r\n          <IntlMessages id=\"menu.judges\" />\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <NavItem>\r\n        <NavLink\r\n          className={classNames({\r\n            active: activeTab === 'sponsors',\r\n            'nav-link': true,\r\n          })}\r\n          onClick={() => setActiveTab('sponsors')}\r\n          to=\"#\"\r\n          location={{}}\r\n        >\r\n          <IntlMessages id=\"menu.sponsors\" />\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <FaqNavItem activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n      <SubmissionNavItem activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n      <FeedbackNavItem activeTab={activeTab} setActiveTab={setActiveTab} />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default NavItems;\r\n","import React from 'react';\r\nimport { Badge, CardBody, Row, TabPane } from 'reactstrap';\r\nimport { Colxx } from '../../../../../components/common/CustomBootstrap';\r\nimport { hackthonApplication } from '../../../../../constants/defaultValues';\r\nimport InputDisplay from '../../../../../containers/application/InputDisplay';\r\nimport IntlMessages from '../../../../../helpers/IntlMessages';\r\n\r\nexport const ApplicationNavItem = () => null;\r\n\r\nexport const ApplicationTabPane = ({ applicationData }) => {\r\n  const applicationAboutData = hackthonApplication.about.filter(({ value }) =>\r\n    applicationData.about.includes(value)\r\n  );\r\n  const applicationContactData = hackthonApplication.contact.filter(\r\n    ({ value }) => applicationData.contact.includes(value)\r\n  );\r\n  const applicationEducationData = hackthonApplication.education.filter(\r\n    ({ value }) => applicationData.education.includes(value)\r\n  );\r\n  const applicationExpericeData = hackthonApplication.experience.filter(\r\n    ({ value }) => applicationData.experience.includes(value)\r\n  );\r\n  const applicationOnlineProfileData = hackthonApplication.online_profiles.filter(\r\n    ({ value }) => applicationData.online_profiles.includes(value)\r\n  );\r\n\r\n  return (\r\n    <TabPane tabId=\"application\">\r\n      <Row>\r\n        <Colxx sm=\"12\">\r\n          <CardBody>\r\n            <div className=\"mb-4\">\r\n              <div className=\"lead h4\">\r\n                <IntlMessages id=\"challenges.about-title\" />\r\n              </div>\r\n\r\n              {applicationAboutData.map((item) => (\r\n                <Badge\r\n                  key={item.key}\r\n                  color=\"outline-primary\"\r\n                  pill\r\n                  className=\"m-2\"\r\n                >\r\n                  <IntlMessages id={item.messageId} />\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"mb-4\">\r\n              <div className=\"lead h4\">\r\n                <IntlMessages id=\"challenges.education-title\" />\r\n              </div>\r\n\r\n              {applicationEducationData.map((item) => (\r\n                <Badge\r\n                  key={item.key}\r\n                  color=\"outline-primary\"\r\n                  pill\r\n                  className=\"m-2\"\r\n                >\r\n                  <IntlMessages id={item.messageId} />\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"mb-4\">\r\n              <div className=\"lead h4\">\r\n                <IntlMessages id=\"challenges.experience-title\" />\r\n              </div>\r\n\r\n              {applicationExpericeData.map((item) => (\r\n                <Badge\r\n                  key={item.key}\r\n                  color=\"outline-primary\"\r\n                  pill\r\n                  className=\"m-2\"\r\n                >\r\n                  <IntlMessages id={item.messageId} />\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"mb-4\">\r\n              <div className=\"lead h4\">\r\n                <IntlMessages id=\"challenges.online-profiles-title\" />\r\n              </div>\r\n\r\n              {applicationOnlineProfileData.map((item) => (\r\n                <Badge\r\n                  key={item.key}\r\n                  color=\"outline-primary\"\r\n                  pill\r\n                  className=\"m-2\"\r\n                >\r\n                  <IntlMessages id={item.messageId} />\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"mb-4\">\r\n              <div className=\"lead h4\">\r\n                <IntlMessages id=\"challenges.contact-title\" />\r\n              </div>\r\n\r\n              {applicationContactData.map((item) => (\r\n                <Badge\r\n                  key={item.key}\r\n                  color=\"outline-primary\"\r\n                  pill\r\n                  className=\"m-2\"\r\n                >\r\n                  <IntlMessages id={item.messageId} />\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n\r\n            <InputDisplay\r\n              messageId=\"challenges.custom-questions\"\r\n              name=\"theme-color-code\"\r\n              value=\"This is a Custom Question\"\r\n            />\r\n          </CardBody>\r\n        </Colxx>\r\n      </Row>\r\n    </TabPane>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { /* Button, */ Card, CardBody, CardSubtitle, CardText } from 'reactstrap';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst JudgeCard = ({ data }) => {\r\n  let isImg = false;\r\n  const img = \"/assets/img/profiles/l-2.jpg\"\r\n  if(data.profile_url.match(/\\.(jpeg|jpg|gif|png)$/) !== null)\r\n  {\r\n    isImg = true;\r\n  }\r\n  return (\r\n    <Card className=\"d-flex flex-row mb-4\">\r\n      <NavLink to={data.profile_url} className=\"d-flex\">\r\n        <img src={isImg?data.profile_url:img} alt=\"Not Found\" width=\"100px\" className=\"m-4\" />\r\n      </NavLink>\r\n      <div className=\" d-flex flex-grow-1 min-width-zero\">\r\n        <CardBody className=\" pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n          <div className=\"min-width-zero\">\r\n            <NavLink to={data.profile_url}>\r\n              <CardSubtitle className=\"truncate mb-1\">{data.name}</CardSubtitle>\r\n            </NavLink>\r\n            <CardText className=\"text-muted text-small mb-2\">\r\n              {data.job_title}\r\n            </CardText>\r\n            {/* <Button outline size=\"xs\" color=\"danger\">\r\n              Remove\r\n            </Button> */}\r\n          </div>\r\n        </CardBody>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default JudgeCard;\r\n","import React from 'react';\r\nimport { /* Button, */ Card, CardBody, CardSubtitle } from 'reactstrap';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SponsorCard = ({ data }) => {\r\n  let isImg = false;\r\n  const img = \"/assets/img/profiles/l-2.jpg\"\r\n  if(data.logo.match(/\\.(jpeg|jpg|gif|png)$/) !== null)\r\n  {\r\n    isImg = true;\r\n  }\r\n  return (\r\n    <Card className=\"d-flex flex-row mb-4\">\r\n      <NavLink to={data.logo} className=\"d-flex\">\r\n        <img src={isImg?data.logo:img} alt=\"Not Found\" width=\"100px\" className=\"m-4\" />\r\n      </NavLink>\r\n      <div className=\" d-flex flex-grow-1 min-width-zero\">\r\n        <CardBody className=\" pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n          <div className=\"min-width-zero\">\r\n            <NavLink to={data.logo}>\r\n              <CardSubtitle className=\"truncate mb-1\">{data.name}</CardSubtitle>\r\n            </NavLink>\r\n            {/* <Button outline size=\"xs\" color=\"danger\">\r\n              Remove\r\n            </Button> */}\r\n          </div>\r\n        </CardBody>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SponsorCard;\r\n","import React from 'react';\r\n\r\nimport { CardBody, Row, TabContent, TabPane } from 'reactstrap';\r\nimport { Colxx } from '../../../../components/common/CustomBootstrap';\r\n\r\n// import IntlMessages from '../../../../helpers/IntlMessages';\r\nimport { ApplicationTabPane } from './components/application';\r\nimport { BasicsTabPane } from './components/basics';\r\n// import { BrandsTabPane } from './components/brands';\r\nimport { DatesTabPane } from './components/dates';\r\nimport { FaqTabPane } from './components/faq';\r\nimport { FeedbackTabPane } from './components/feedback';\r\nimport { LinksTabPane } from './components/links';\r\nimport { PrizesTabPane } from './components/prizes';\r\nimport { SubmissionTabPane } from './components/submission';\r\nimport JudgeCard from '../../../../components/cards/JudgeCard';\r\nimport SponsorCard from '../../../../components/cards/SponsorCard';\r\nimport { getCurrentUser } from '../../../../helpers/Utils';\r\n\r\nconst TabPanes = ({ activeTab, hackInfo }) => {\r\n  const {id} = getCurrentUser();\r\n  const { hackathon, sponsors, prizes, judges, Faq, application } = hackInfo;\r\n  const applicationData = application || {\r\n    about: [],\r\n    contact: [],\r\n    education: [],\r\n    experience: [],\r\n    online_profiles: [],\r\n  };\r\n\r\n  return (\r\n    <TabContent activeTab={activeTab}>\r\n      <BasicsTabPane hackathon={hackathon} />\r\n\r\n      <ApplicationTabPane applicationData={applicationData} />\r\n\r\n      <LinksTabPane hackathon={hackathon} />\r\n{/* \r\n      <BrandsTabPane hackathon={hackathon} /> */}\r\n\r\n      <DatesTabPane hackathon={hackathon} />\r\n\r\n      <PrizesTabPane prizes={prizes} />\r\n\r\n      <TabPane tabId=\"sponsors\">\r\n        <Row>\r\n          <Colxx sm=\"12\">\r\n            <CardBody>\r\n              {sponsors.map((item) => (\r\n                <SponsorCard key={item.id} data={item} />\r\n              ))}\r\n            </CardBody>\r\n          </Colxx>\r\n        </Row>\r\n      </TabPane>\r\n\r\n      <TabPane tabId=\"judges\">\r\n        <Row>\r\n          <Colxx sm=\"12\">\r\n            <CardBody>\r\n              {judges.map((item) => (\r\n                  <JudgeCard \r\n                    key={item.id} \r\n                    data={item} \r\n                  />\r\n              ))}\r\n            </CardBody>\r\n          </Colxx>\r\n        </Row>\r\n      </TabPane>\r\n      \r\n\r\n      <FaqTabPane Faq={Faq} />\r\n\r\n      \r\n      <SubmissionTabPane submission={hackInfo.hackathon_submission} user={id}/>\r\n\r\n      <FeedbackTabPane hackathon={hackathon} />\r\n    </TabContent>\r\n  );\r\n};\r\n\r\nexport default TabPanes;\r\n","import React from 'react';\r\n\r\nimport { Card, CardBody, NavLink } from 'reactstrap';\r\nimport IntlMessages from '../../../../../helpers/IntlMessages';\r\n\r\nconst HackDetails = ({ hackInfo }) => {\r\n  const { hackathon } = hackInfo;\r\n\r\n  return (\r\n    <Card className=\"mb-4\">\r\n      <CardBody>\r\n        <div className=\"text-center pt-4\">\r\n          <p className=\"list-item-heading pt-2\">{hackathon.name}</p>\r\n        </div>\r\n        <p className=\"mb-3\">{hackathon.about}</p>\r\n        <p className=\"text-muted text-small mb-2\">\r\n          {/* <IntlMessages id=\"pages.location\" /> */}\r\n          Tagline\r\n        </p>\r\n        <p className=\"mb-3\">{hackathon.tagline}</p>\r\n        {/* <p className=\"text-muted text-small mb-2\">\r\n          <IntlMessages id=\"pages.responsibilities\" />\r\n        </p>\r\n        <p className=\"mb-3\">\r\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n            FRONTEND\r\n          </Badge>\r\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n            JAVASCRIPT\r\n          </Badge>\r\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n            SECURITY\r\n          </Badge>\r\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n            DESIGN\r\n          </Badge>\r\n        </p> */}\r\n        <p className=\"text-muted text-small mb-2\">\r\n          <IntlMessages id=\"menu.contact\" />\r\n        </p>\r\n        <div className=\"social-icons\">\r\n          <ul className=\"list-unstyled list-inline\">\r\n            <li className=\"list-inline-item\">\r\n              <NavLink href={hackathon.facebook} target=\"_blank\">\r\n                <i className=\"simple-icon-social-facebook\" />\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <NavLink href={hackathon.twitter} target=\"_blank\">\r\n                <i className=\"simple-icon-social-twitter\" />\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <NavLink href={hackathon.instagram} target=\"_blank\">\r\n                <i className=\"simple-icon-social-instagram\" />\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <NavLink href={hackathon.linkedin} target=\"_blank\">\r\n                <i className=\"simple-icon-social-linkedin\" />\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <NavLink href={hackathon.hackathon_website} target=\"_blank\">\r\n                <i className=\"simple-icon-link\" />\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HackDetails;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardHeader, Row } from 'reactstrap';\r\n\r\nimport {\r\n  Colxx,\r\n  Separator,\r\n} from '../../../../components/common/CustomBootstrap';\r\n\r\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\r\nimport SingleLightbox from '../../../../components/application/SingleLightbox';\r\n\r\nimport NavItems from './NavItems';\r\nimport TabPanes from './TabPanes';\r\n\r\nimport HackDetails from './components/HackDetails';\r\nimport useRequest from '../../../../hooks/use-request';\r\nimport { log } from '../../../../helpers/Utils';\r\n\r\nconst Details = ({ match }) => {\r\n  const { id } = match.params;\r\n\r\n  const [activeTab, setActiveTab] = useState('basics');\r\n\r\n  const [data, setData] = useState({});\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const [doRequest, requestLoading, requestError] = useRequest({\r\n    url: `/getdetails/${id}`,\r\n    method: 'GET',\r\n\r\n    nextSuccess: (responseData) => {\r\n      setData(responseData.getdetails);\r\n      setIsLoaded(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    doRequest();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (requestLoading || !isLoaded) return <div className=\"loading\" />;\r\n\r\n  if (requestError) log(requestError);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Breadcrumb heading=\"menu.details\" match={match} />\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Separator className=\"mb-5\" />\r\n\r\n      <Row>\r\n        <Colxx xxs=\"12\" className=\"mb-5\">\r\n          <Card>\r\n            <SingleLightbox\r\n              // thumb=\"/assets/img/social/header.jpg\"\r\n              // large=\"/assets/img/social/header.jpg\"\r\n              thumb={data.hackathon.hackathon_cover_img}\r\n              large={data.hackathon.hackathon_cover_img}\r\n              className=\"social-header card-img\"\r\n            />\r\n          </Card>\r\n        </Colxx>\r\n\r\n        <Colxx xxs=\"12\" md=\"4\" className=\"mb-4 col-left\">\r\n          <SingleLightbox\r\n            // thumb=\"/assets/img/profiles/l-10.jpg\"\r\n            // large=\"/assets/img/profiles/10.jpg\"\r\n            thumb={data.hackathon.hackathon_logo}\r\n            large={data.hackathon.hackathon_logo}\r\n            className=\"img-thumbnail card-img social-profile-img\"\r\n          />\r\n          <HackDetails hackInfo={data} />\r\n        </Colxx>\r\n\r\n        <Colxx xxs=\"12\" md=\"8\" className=\"mb-4 col-right\">\r\n          <Card className=\"mb-4\">\r\n            <CardHeader>\r\n              <NavItems activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n              <TabPanes activeTab={activeTab} hackInfo={data} />\r\n            </CardHeader>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n"],"sourceRoot":""}