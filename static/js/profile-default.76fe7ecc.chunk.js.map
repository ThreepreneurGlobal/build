{"version":3,"sources":["containers/navs/Breadcrumb.js","components/common/RecentHack.js","hooks/use-fetch.js","views/app/profile/default/EditProfileActions.js","components/pages/SingleLightbox.js","views/app/profile/default/UserCard.js","views/app/profile/default/index.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","getStatusText","status","getTypeText","RecentHack","data","participated","name","tagline","submit_status","hackathon_start","application_end","hackathon_website","hackathon_type_id","otherArray","sdg","sdg_goals","mega","mega_trends","history","useHistory","href","target","rel","item","src","alt","color","pill","outline","onClick","push","useFetch","url","refresh","useState","loading","setLoading","error","setError","setData","useEffect","a","instance","method","response","success","message","fetchData","propTypes","PropTypes","string","isRequired","bool","EditProfileActions","Button","size","IntlMessages","SingleLightbox","thumb","large","isOpen","setIsOpen","location","mainSrc","onCloseRequest","UserCard","profileData","getProfileData","values","setValues","openUpload","setOpenUpload","formData","FormData","handleUpload","event","console","log","append","user_id","delete","headers","timeout","getProfileDataAsync","window","reload","Card","profile_photo","CardBody","bio","address","facebook","linkedin","instagram","github","Modal","toggle","ModalHeader","ModalBody","InputGroup","CustomInput","type","accept","onChange","files","InputGroupAddon","addonType","connect","authUser","currentUser","getCurrentUser","Row","xxs","full_name","Breadcrumb","lg","hack","CardTitle","CardSubtitle"],"mappings":"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","file":"static/js/profile-default.76fe7ecc.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub) => {\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      {match && <BreadcrumbItems match={match} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/').filter(Boolean);\r\n\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","/* eslint-disable camelcase */\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardText,\r\n  CardTitle,\r\n // NavLink,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { Separator } from './CustomBootstrap';\r\n\r\nconst getStatusColor = (status) => {\r\n  if (status === 0) return 'outline-success';\r\n  if (status === 1) return 'outline-warning';\r\n  if (status === 'COMPLETED') return 'outline-danger';\r\n  return '';\r\n};\r\n\r\nconst getStatusText = (status) => {\r\n  if (status === 0) return 'UPCOMING';\r\n  if (status === 1) return 'ON GOING';\r\n  if (status === 2) return 'COMPLETED';\r\n  return 'primary';\r\n};\r\n\r\nconst getTypeText = (status) => {\r\n  if (status === 0) return 'Online';\r\n  if (status === 1) return 'Blender';\r\n  if (status === 2) return 'Offiline';\r\n  return '';\r\n};\r\n\r\nconst RecentHack = ({ data, participated }) => {\r\n  const {\r\n    id,\r\n    name,\r\n    tagline,\r\n    submit_status,\r\n    hackathon_start,\r\n    application_end,\r\n    hackathon_website,\r\n    hackathon_type_id,\r\n    otherArray,\r\n    \r\n  } = data;\r\n  let sdg = otherArray?.sdg_goals;\r\n  let mega = otherArray?.mega_trends;\r\n const history = useHistory();\r\n  if(sdg === false)\r\n  {\r\n    sdg = null;\r\n  }\r\n  if(mega === false)\r\n  {\r\n    mega = null;\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle>\r\n          <p className=\"h2 lead\">\r\n            <a\r\n              href={hackathon_website}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className=\"new-tab\"\r\n            >\r\n              {name}\r\n            </a>\r\n          </p>\r\n          <CardSubtitle className=\"text-small\">{tagline}</CardSubtitle>\r\n        </CardTitle>\r\n\r\n        <Row className=\"justify-content-center\">\r\n          {sdg?.map((item) => (\r\n            <img\r\n              key={item.id}\r\n              src={`/assets/img/sdg/${item.id}.png`}\r\n              alt={item.name}\r\n              className=\"list-thumbnail align-self-center m-1 small hackcard-icon\"\r\n            />\r\n          ))}\r\n          |\r\n          {/* <div className=\"vertical\" style={{ height: '45px' }} /> */}\r\n\r\n          {mega?.map((item) => (\r\n            <img\r\n              key={item.id}\r\n              src={`/assets/img/mega-trends/${item.id}.png`}\r\n              alt={item.name}\r\n              className=\"list-thumbnail align-self-center m-1 small hackcard-icon\"\r\n            />\r\n          ))}\r\n        </Row>\r\n\r\n        <Separator className=\"my-4\" />\r\n\r\n        <CardTitle>\r\n          <IntlMessages id=\"Application Start\" />\r\n          <CardText>{application_end}</CardText>\r\n        </CardTitle>\r\n\r\n        <CardTitle>\r\n          <IntlMessages id=\"hackathon start date\" />\r\n          <CardText>{hackathon_start}</CardText>\r\n        </CardTitle>\r\n\r\n        <Separator className=\"mb-4\" />\r\n\r\n        <Badge\r\n          color={getStatusColor(submit_status)}\r\n          pill\r\n          outline\r\n          className=\"mb-3 mr-3\"\r\n        >\r\n          {getStatusText(submit_status)}\r\n        </Badge>\r\n\r\n        <Badge color=\"outline-primary\" pill className=\"mb-3\">\r\n          {getTypeText(hackathon_type_id)}\r\n        </Badge>\r\n\r\n       \r\n\r\n        <Row className=\"justify-content-center\">\r\n          {participated ? (\r\n            <Button\r\n            color=\"secondary\"\r\n            className=\"m-1\"\r\n            onClick={() =>\r\n              history.push(`${adminRoot}/challenges/${id}/submission`)\r\n            }\r\n          >\r\n            <IntlMessages id=\"Submit your hack\" />\r\n          </Button>\r\n          ) : (\r\n            <Button\r\n              color=\"secondary\"\r\n              className=\"m-1\"\r\n              onClick={() =>\r\n                history.push(`${adminRoot}/challenges/register/${id}`)\r\n              }\r\n            >\r\n              <IntlMessages id=\"hackcard.participate-button\" />\r\n            </Button>\r\n          )}\r\n          <Button\r\n            color=\"secondary\"\r\n            className=\"m-1\"\r\n            onClick={() => history.push(`${adminRoot}/challenges/${id}`)}\r\n          >\r\n            <IntlMessages id=\"hackcard.view-details\" />\r\n          </Button>\r\n        </Row>\r\n\r\n        {/* <pre>{JSON.stringify(data, null, 2)}</pre> */}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RecentHack;\r\n","import { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport instance from '../helpers/axiosInstance';\r\n\r\nconst useFetch = (url, refresh = false, name = 'data') => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!url) {\r\n      setError('Please Provide a Uri!');\r\n      return;\r\n    }\r\n\r\n    if (refresh) {\r\n      setData(false);\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await instance({\r\n          method: 'GET',\r\n          url,\r\n        });\r\n\r\n        if (response.data.success) {\r\n          setData(response.data[name]);\r\n        } else {\r\n          setError(response.data.message);\r\n        }\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return { loading, data, error };\r\n};\r\n\r\nexport default useFetch;\r\n\r\nuseFetch.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  refresh: PropTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { adminRoot } from '../../../../constants/defaultValues';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\n\r\nconst EditProfileActions = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"top-right-button-container\">\r\n      <Button\r\n        color=\"primary\"\r\n        size=\"sm\"\r\n        onClick={() => history.push(`${adminRoot}/profile/about`)}\r\n      >\r\n        <IntlMessages id=\"user.edit-profile\" />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfileActions;\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Lightbox from 'react-image-lightbox';\r\n\r\nconst SingleLightbox = ({ thumb, className, large }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <NavLink to=\"#\" location={{}} onClick={() => setIsOpen(true)}>\r\n        <img src={thumb} alt=\"thumbnail\" className={className} />\r\n      </NavLink>\r\n\r\n      {isOpen && (\r\n        <Lightbox mainSrc={large} onCloseRequest={() => setIsOpen(false)} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default SingleLightbox;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  // Badge,\r\n  Card,\r\n  Button,\r\n  CardBody,\r\n  NavLink as Link,\r\n  Modal,\r\n  ModalBody,\r\n  InputGroupAddon,\r\n  CustomInput,\r\n  InputGroup,\r\n  ModalHeader,\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport SingleLightbox from '../../../../components/pages/SingleLightbox';\r\nimport { adminRoot } from '../../../../constants/defaultValues';\r\n\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\nimport { getProfileData, getProfileDataAsync } from '../../../../helpers/Utils';\r\nimport instance from '../../../../helpers/axiosInstance';\r\n\r\nconst UserCard = () => {\r\n  const profileData = getProfileData();\r\n\r\n  const [values, setValues] = useState({});\r\n  const [openUpload, setOpenUpload] = useState(false);\r\n\r\n  const formData = new FormData();\r\n\r\n  const handleFileChange = (event) => {\r\n    setValues({ ...values, [event.target.id]: event.target.files[0] });\r\n  };\r\n\r\n  const handleUpload = async (event) => {\r\n    console.log(profileData);\r\n    formData.append('id', profileData.id);\r\n    formData.append('user_id', profileData.user_id);\r\n    formData.delete(event.target.id);\r\n\r\n    formData.append(`${event.target.id}`, values[event.target.id]);\r\n\r\n    await instance({\r\n      url: '/updateProfile',\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n      data: formData,\r\n      timeout: 100000,\r\n    });\r\n\r\n    await getProfileDataAsync(profileData?.user_id);\r\n    setOpenUpload(false);\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mb-4\">\r\n      <div className=\"position-absolute card-top-buttons\">\r\n        <Button\r\n          outline\r\n          color=\"primary\"\r\n          className=\"icon-button\"\r\n          onClick={() => setOpenUpload(true)}\r\n        >\r\n          <i className=\"simple-icon-pencil\" />\r\n        </Button>\r\n      </div>\r\n\r\n      {profileData?.profile_photo && (\r\n        <SingleLightbox\r\n          thumb={profileData?.profile_photo}\r\n          large={profileData?.profile_photo}\r\n          className=\"card-img-top\"\r\n        />\r\n      )}\r\n\r\n      <CardBody>\r\n        <p className=\"text-muted text-small\">\r\n          <IntlMessages id=\"menu.about\" />\r\n        </p>\r\n\r\n        <p className=\"mb-3\">\r\n          {profileData?.bio || (\r\n            <NavLink to={`${adminRoot}/profile/about`}>{profileData?.bio}</NavLink>\r\n          )}\r\n        </p>\r\n{/* \r\n        <p className=\"text-muted text-small mb-2\">\r\n          <IntlMessages id=\"pages.location\" />\r\n        </p> */}\r\n\r\n        <p className=\"mb-3\">\r\n          {profileData?.address || (\r\n            <NavLink to={`${adminRoot}/profile/contact`}>{profileData?.address}</NavLink>\r\n          )}\r\n        </p>\r\n\r\n        {/* <p className=\"text-muted text-small mb-2\">\r\n          <IntlMessages id=\"pages.responsibilities\" />\r\n        </p>\r\n\r\n        <p className=\"mb-3\">\r\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n            FRONTEND\r\n          </Badge>\r\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n            JAVASCRIPT\r\n          </Badge>\r\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n            SECURITY\r\n          </Badge>\r\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n            DESIGN\r\n          </Badge>\r\n        </p> */}\r\n\r\n        <p className=\"text-muted text-small mb-2\">\r\n          <IntlMessages id=\"menu.contact\" />\r\n        </p>\r\n\r\n        <div className=\"social-icons\">\r\n          <ul className=\"list-unstyled list-inline\">\r\n            <li className=\"list-inline-item\">\r\n              <Link href={profileData?.facebook} target=\"_blank\">\r\n                <i className=\"simple-icon-social-facebook\" />\r\n              </Link>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <Link href={profileData?.linkedin}>\r\n                <i className=\"simple-icon-social-linkedin\" />\r\n              </Link>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <Link href={profileData?.instagram} target=\"_blank\">\r\n                <i className=\"simple-icon-social-instagram\" />\r\n              </Link>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <Link href={profileData?.github} target=\"_blank\">\r\n                <i className=\"simple-icon-social-github\" />\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </CardBody>\r\n\r\n      <Modal isOpen={openUpload} toggle={() => setOpenUpload(!openUpload)}>\r\n        <ModalHeader>\r\n          <IntlMessages id=\"user.upload-profile-photo\" />\r\n        </ModalHeader>\r\n\r\n        <ModalBody>\r\n          <InputGroup>\r\n            <CustomInput\r\n              type=\"file\"\r\n              id=\"profile_photo\"\r\n              name=\"customFile\"\r\n              accept=\"image/jpeg, image/jpg, image/png\"\r\n              onChange={handleFileChange}\r\n            />\r\n            <InputGroupAddon addonType=\"append\">\r\n              <Button\r\n                outline\r\n                color=\"secondary\"\r\n                id=\"profile_photo\"\r\n                onClick={handleUpload}\r\n              >\r\n                <IntlMessages id=\"user.upload-button\" />\r\n              </Button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n        </ModalBody>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Row,\r\n} from 'reactstrap';\r\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\r\nimport { Colxx } from '../../../../components/common/CustomBootstrap';\r\nimport RecentHack from '../../../../components/common/RecentHack';\r\nimport EditProfileActions from './EditProfileActions';\r\nimport UserCard from './UserCard';\r\nimport useFetch from '../../../../hooks/use-fetch';\r\nimport { getCurrentUser, log } from '../../../../helpers/Utils';\r\nimport { adminRoot } from '../../../../constants/defaultValues';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\n\r\nconst ProfileView = ({ match, currentUser, profileData }) => {\r\n  const { id } = getCurrentUser();\r\n\r\n  const { loading, data, error } = useFetch(`//${id}`);\r\n\r\n  if (loading) return <div className=\"loading\" />;\r\n\r\n  if (error) log(error);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Row>\r\n            <Colxx className=\"mb-0\">\r\n              <h1>{profileData?.full_name}</h1>\r\n              <EditProfileActions />\r\n            </Colxx>\r\n          </Row>\r\n\r\n          <Breadcrumb match={match} />\r\n\r\n          <Row>\r\n            <Colxx xxs=\"12\" lg=\"5\" className=\"mb-4 col-left\">\r\n              <UserCard currentUser={currentUser} />\r\n            </Colxx>\r\n\r\n            <Colxx xxs=\"12\" lg=\"7\" className=\"mb-4 col-right\">\r\n              <Row>\r\n                {data.length ? (\r\n                  data.map((hack) => {\r\n                    return (\r\n                      <Colxx xxs=\"12\" lg=\"6\" className=\"mb-4\" key={hack.id}>\r\n                        <RecentHack data={hack} />\r\n                      </Colxx>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <Colxx xxs=\"12\">\r\n                    <Card className=\"text-center\">\r\n                      <CardBody>\r\n                        <CardTitle className=\"mb-0\">\r\n                          You have applied to\r\n                        </CardTitle>\r\n\r\n                        <div className=\"display-1\">{data.length}</div>\r\n                        <CardSubtitle>Hackathons</CardSubtitle>\r\n\r\n                        <div>\r\n                          <Button\r\n                            href={`${adminRoot}/challenges/explore`}\r\n                            color=\"primary\"\r\n                          >\r\n                            <IntlMessages id=\"challenges.explore-all\" />\r\n                          </Button>\r\n                        </div>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                )}\r\n              </Row>\r\n            </Colxx>\r\n          </Row>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { currentUser, profileData } = authUser;\r\n  return { currentUser, profileData };\r\n};\r\n\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ProfileView);\r\n"],"sourceRoot":""}