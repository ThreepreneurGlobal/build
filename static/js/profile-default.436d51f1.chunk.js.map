{"version":3,"sources":["containers/navs/Breadcrumb.js","components/common/RecentHack.js","data/hacks.js","views/app/profile/default/EditProfileActions.js","components/pages/SingleLightbox.js","views/app/profile/default/UserCard.js","views/app/profile/default/index.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","console","log","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","getBadgeColor","status","RecentHack","data","title","createDate","color","pill","outline","href","hacks","img","category","endDate","statusColor","description","EditProfileActions","Button","IntlMessages","SingleLightbox","thumb","large","useState","isOpen","setIsOpen","location","onClick","src","alt","mainSrc","onCloseRequest","UserCard","Card","CardBody","Badge","target","connect","authUser","currentUser","profileData","Row","xxs","full_name","Breadcrumb","lg","hack"],"mappings":"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","file":"static/js/profile-default.436d51f1.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub) => {\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      <BreadcrumbItems match={match} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/').filter(Boolean);\r\n\r\n  console.log(paths);\r\n\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardText,\r\n  CardTitle,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { Separator } from './CustomBootstrap';\r\n\r\nconst getBadgeColor = (status) => {\r\n  if (status === 'UPCOMING') return 'outline-success';\r\n  if (status === 'ON GOING') return 'outline-warning';\r\n  if (status === 'COMPLETED') return 'outline-danger';\r\n  return 'primary';\r\n};\r\n\r\nconst RecentHack = ({ data }) => {\r\n  const { id, title, status, createDate } = data;\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle>\r\n          <p className=\"lead\">{title}</p>\r\n        </CardTitle>\r\n\r\n        <CardSubtitle>\r\n          <IntlMessages id=\"hackcard.starts\" />\r\n        </CardSubtitle>\r\n        <CardText>{createDate}</CardText>\r\n\r\n        <CardSubtitle>\r\n          <IntlMessages id=\"hackcard.ends\" />\r\n        </CardSubtitle>\r\n        <CardText>{createDate}</CardText>\r\n\r\n        <Badge color={getBadgeColor(status)} pill outline className=\"mb-3\">\r\n          {status}\r\n        </Badge>\r\n\r\n        <Separator className=\"mb-3\" />\r\n\r\n        <Row className=\"justify-content-center\">\r\n          <Button href={`${adminRoot}/challenges/${id}`}>\r\n            <IntlMessages id=\"hackcard.participate-button\" />\r\n          </Button>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RecentHack;\r\n","const hacks = [\r\n  {\r\n    id: 1,\r\n    title: 'HackOnFest',\r\n    img: '/assets/img/products/marble-cake-thumb.jpg',\r\n    category: 'Online',\r\n    createDate: '02.04.2021',\r\n    endDate: '08.04.2021',\r\n    status: 'UPCOMING',\r\n    statusColor: 'primary',\r\n    description:\r\n      'Some description about the hack goes here, and other details.',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'HackMol2.0',\r\n    img: '/assets/img/products/marble-cake-thumb.jpg',\r\n    category: 'Online',\r\n    createDate: '08.04.2021',\r\n    status: 'COMPLETED',\r\n    statusColor: 'primary',\r\n    description:\r\n      'Some description about the hack goes here, and other details.',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Hackulus',\r\n    img: '/assets/img/products/marble-cake-thumb.jpg',\r\n    category: 'Online',\r\n    createDate: '02.04.2021',\r\n    endDate: '08.04.2021',\r\n    status: 'ON GOING',\r\n    statusColor: 'primary',\r\n    description:\r\n      'Some description about the hack goes here, and other details.',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Code2Create',\r\n    img: '/assets/img/products/marble-cake-thumb.jpg',\r\n    category: 'Hybrid',\r\n    createDate: '08.04.2021',\r\n    endDate: '08.04.2021',\r\n    status: 'ON GOING',\r\n    statusColor: 'primary',\r\n    description:\r\n      'Some description about the hack goes here, and other details.',\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'HackOnFest',\r\n    img: '/assets/img/products/marble-cake-thumb.jpg',\r\n    category: 'Online',\r\n    createDate: '02.04.2021',\r\n    endDate: '02.04.2021',\r\n    status: 'ON GOING',\r\n    statusColor: 'primary',\r\n    description:\r\n      'Some description about the hack goes here, and other details.',\r\n  },\r\n  {\r\n    id: 6,\r\n    title: 'HackMol2.0',\r\n    img: '/assets/img/products/marble-cake-thumb.jpg',\r\n    category: 'Offline',\r\n    createDate: '08.04.2021',\r\n    endDate: '08.04.2021',\r\n    status: 'UPCOMING',\r\n    statusColor: 'primary',\r\n    description:\r\n      'Some description about the hack goes here, and other details.',\r\n  },\r\n];\r\n\r\nexport default hacks;\r\n","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { adminRoot } from '../../../../constants/defaultValues';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\n\r\nconst EditProfileActions = () => {\r\n  return (\r\n    <div className=\"top-right-button-container\">\r\n      <Button color=\"primary\" href={`${adminRoot}/profile/about`}>\r\n        <span className=\"pr-3\">\r\n          <IntlMessages id=\"user.edit-profile\" />\r\n        </span>\r\n        <span className=\"icon-button\">\r\n          <i className=\"simple-icon-pencil\" />\r\n        </span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfileActions;\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Lightbox from 'react-image-lightbox';\r\n\r\nconst SingleLightbox = ({ thumb, className, large }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <NavLink to=\"#\" location={{}} onClick={() => setIsOpen(true)}>\r\n        <img src={thumb} alt=\"thumbnail\" className={className} />\r\n      </NavLink>\r\n\r\n      {isOpen && (\r\n        <Lightbox mainSrc={large} onCloseRequest={() => setIsOpen(false)} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default SingleLightbox;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Badge, Card, Button, CardBody } from 'reactstrap';\r\nimport SingleLightbox from '../../../../components/pages/SingleLightbox';\r\n\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\n\r\nconst UserCard = () => (\r\n  <Card className=\"mb-4\">\r\n    <div className=\"position-absolute card-top-buttons\">\r\n      <Button outline color=\"primary\" className=\"icon-button\">\r\n        <i className=\"simple-icon-pencil\" />\r\n      </Button>\r\n    </div>\r\n    <SingleLightbox\r\n      thumb=\"/assets/img/profiles/10.jpg\"\r\n      large=\"/assets/img/profiles/10.jpg\"\r\n      className=\"card-img-top\"\r\n    />\r\n\r\n    <CardBody>\r\n      <p className=\"text-muted text-small\">\r\n        <IntlMessages id=\"menu.about\" />\r\n      </p>\r\n\r\n      <p className=\"mb-3\">\r\n        I’m a web developer. I spend my whole day, practically every day,\r\n        experimenting with HTML, CSS, and JavaScript; dabbling with Python and\r\n        Ruby; and inhaling a wide variety of potentially useless information\r\n        through a few hundred RSS feeds. I build websites that delight and\r\n        inform. I do it well.\r\n      </p>\r\n\r\n      <p className=\"text-muted text-small mb-2\">\r\n        <IntlMessages id=\"pages.location\" />\r\n      </p>\r\n\r\n      <p className=\"mb-3\">Nairobi, Kenya</p>\r\n\r\n      <p className=\"text-muted text-small mb-2\">\r\n        <IntlMessages id=\"pages.responsibilities\" />\r\n      </p>\r\n\r\n      <p className=\"mb-3\">\r\n        <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n          FRONTEND\r\n        </Badge>\r\n        <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n          JAVASCRIPT\r\n        </Badge>\r\n        <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n          SECURITY\r\n        </Badge>\r\n        <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n          DESIGN\r\n        </Badge>\r\n      </p>\r\n\r\n      <p className=\"text-muted text-small mb-2\">\r\n        <IntlMessages id=\"menu.contact\" />\r\n      </p>\r\n\r\n      <div className=\"social-icons\">\r\n        <ul className=\"list-unstyled list-inline\">\r\n          <li className=\"list-inline-item\">\r\n            <NavLink to=\"#\" target=\"_blank\" location={{}}>\r\n              <i className=\"simple-icon-social-facebook\" />\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <NavLink to=\"#\" location={{}}>\r\n              <i className=\"simple-icon-social-twitter\" />\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <NavLink to=\"#\" location={{}}>\r\n              <i className=\"simple-icon-social-instagram\" />\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </CardBody>\r\n  </Card>\r\n);\r\n\r\nexport default UserCard;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row } from 'reactstrap';\r\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\r\nimport { Colxx } from '../../../../components/common/CustomBootstrap';\r\nimport RecentHack from '../../../../components/common/RecentHack';\r\nimport hacks from '../../../../data/hacks';\r\nimport EditProfileActions from './EditProfileActions';\r\nimport UserCard from './UserCard';\r\n\r\nconst ProfileView = ({ match, currentUser, profileData }) => (\r\n  <>\r\n    <Row>\r\n      <Colxx xxs=\"12\">\r\n        <Row>\r\n          <Colxx className=\"mb-0\">\r\n            <h1>{profileData.full_name}</h1>\r\n            <EditProfileActions />\r\n          </Colxx>\r\n        </Row>\r\n\r\n        <Breadcrumb match={match} />\r\n\r\n        <Row>\r\n          <Colxx xxs=\"12\" lg=\"5\" className=\"mb-4 col-left\">\r\n            <UserCard currentUser={currentUser} />\r\n          </Colxx>\r\n\r\n          <Colxx xxs=\"12\" lg=\"7\" className=\"mb-4 col-right\">\r\n            <Row>\r\n              {hacks.map((hack) => {\r\n                return (\r\n                  <Colxx xxs=\"12\" lg=\"6\" className=\"mb-4\" key={hack.id}>\r\n                    <RecentHack data={hack} />\r\n                  </Colxx>\r\n                );\r\n              })}\r\n            </Row>\r\n          </Colxx>\r\n        </Row>\r\n      </Colxx>\r\n    </Row>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { currentUser, profileData } = authUser;\r\n  return { currentUser, profileData };\r\n};\r\n\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ProfileView);\r\n"],"sourceRoot":""}