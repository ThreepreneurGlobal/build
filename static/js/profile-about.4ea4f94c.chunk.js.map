{"version":3,"sources":["containers/navs/Breadcrumb.js","components/StateButton.js","components/common/CustomSelectInput.js","views/app/profile/about.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","console","log","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","StateButton","color","children","onClick","next","useState","status","setStatus","message","setMessage","messageShow","setMessageShow","classnames","then","res","catch","err","finally","setTimeout","disabled","placement","isOpen","target","CustomSelectInput","props","customProps","autoCorrect","autoCapitalize","Input","mapActionsToProps","getProfileDataAction","getProfileData","connect","history","authUser","currentUser","profileData","email","full_name","gender","tshirt_size","contact_no","bio","editAbout","setEditAbout","formValues","setFormValues","handleChange","event","key","value","handleSubmitAbout","newData","a","instance","method","url","data","response","success","setProfileData","Promise","_","failed","Row","xxs","Breadcrumb","md","Card","Button","outline","CardBody","CardTitle","IntlMessages","FormGroup","Label","type","name","onChange","components","classNamePrefix","defaultInputValue","selectedOption","options","genderOptions","shirtSizeOptions","rows","placeholder","href"],"mappings":"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","file":"static/js/profile-about.4ea4f94c.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub) => {\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      <BreadcrumbItems match={match} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/').filter(Boolean);\r\n\r\n  console.log(paths);\r\n\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React, { useState } from 'react';\r\nimport { Button, Popover, PopoverBody } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nconst StateButton = ({ id, className, color, children, onClick, next }) => {\r\n  const [status, setStatus] = useState('default');\r\n  const [message, setMessage] = useState('');\r\n  const [messageShow, setMessageShow] = useState(false);\r\n\r\n  const handleOnClick = () => {\r\n    setStatus('processing');\r\n\r\n    onClick()\r\n      .then((res) => {\r\n        setMessage(res);\r\n        setStatus('success');\r\n      })\r\n      .catch((err) => {\r\n        setMessage(err);\r\n        setStatus('fail');\r\n      })\r\n      .finally(() => {\r\n        setMessageShow(true);\r\n        setTimeout(() => {\r\n          setStatus('default');\r\n          setMessageShow(false);\r\n          if (next) {\r\n            next();\r\n          }\r\n        }, 3000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <span>\r\n      <Button\r\n        id={id}\r\n        className={`btn-multiple-state  ${className}  ${classnames({\r\n          'show-spinner': status === 'processing',\r\n          'show-success': status === 'success',\r\n          'show-fail': status === 'fail',\r\n        })}`}\r\n        color={color}\r\n        onClick={handleOnClick}\r\n        disabled={status !== 'default'}\r\n      >\r\n        <Popover placement=\"top\" isOpen={messageShow} target={id}>\r\n          <PopoverBody>{message}</PopoverBody>\r\n        </Popover>\r\n        <span className=\"spinner d-inline-block\">\r\n          <span className=\"bounce1\" />\r\n          <span className=\"bounce2\" />\r\n          <span className=\"bounce3\" />\r\n        </span>\r\n        <span className=\"icon success\">\r\n          <i className=\"simple-icon-check\" />\r\n        </span>\r\n        <span className=\"icon fail\">\r\n          <i className=\"simple-icon-exclamation\" />\r\n        </span>\r\n        <span className=\"label\">{children}</span>\r\n      </Button>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default StateButton;\r\n","import React from 'react';\r\nimport { components } from 'react-select';\r\n\r\nconst CustomSelectInput = (props) => {\r\n  const customProps = { ...props };\r\n  delete customProps.autoCorrect;\r\n  delete customProps.autoCapitalize;\r\n  return <components.Input {...customProps} />;\r\n};\r\n\r\nexport default CustomSelectInput;\r\n","/* eslint-disable camelcase */\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport { getProfileData } from '../../../redux/actions';\r\nimport IntlMessages from '../../../helpers/IntlMessages';\r\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\r\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\r\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\r\nimport {\r\n  adminRoot,\r\n  genderOptions,\r\n  shirtSizeOptions,\r\n} from '../../../constants/defaultValues';\r\nimport StateButton from '../../../components/StateButton';\r\nimport instance from '../../../helpers/axiosInstance';\r\nimport { setProfileData } from '../../../helpers/Utils';\r\n\r\nconst About = ({ match, currentUser, profileData }) => {\r\n  const { email } = currentUser;\r\n  const { id, full_name, gender, tshirt_size, contact_no, bio } = profileData;\r\n\r\n  const [editAbout, setEditAbout] = useState(false);\r\n\r\n  const [formValues, setFormValues] = useState({\r\n    full_name,\r\n    gender,\r\n    tshirt_size,\r\n    contact_no,\r\n    bio,\r\n  });\r\n\r\n  const handleChange = (event, key) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [key]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmitAbout = async (newData) => {\r\n    const response = await instance({\r\n      method: 'POST',\r\n      url: '/updateProfile',\r\n      data: { id, ...newData },\r\n    });\r\n\r\n    const { data } = response;\r\n\r\n    if (data.success) {\r\n      setProfileData({ ...profileData, ...newData });\r\n      return new Promise((success) => {\r\n        success('Profile updated successfully!');\r\n      });\r\n    }\r\n    return new Promise((_, failed) => {\r\n      // eslint-disable-next-line\r\n      failed('Failed to update profile!');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Breadcrumb heading=\"menu.about\" match={match} />\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row className=\"justify-content-center\">\r\n        <Colxx xxs=\"12\" md=\"8\">\r\n          <Card className=\"mb-4\">\r\n            <div className=\"position-absolute card-top-buttons\">\r\n              <Button\r\n                outline\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  setEditAbout(!editAbout);\r\n                }}\r\n                className=\"icon-button\"\r\n              >\r\n                <i className=\"simple-icon-pencil\" />\r\n              </Button>\r\n            </div>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <h2 className=\"lead\">\r\n                  <IntlMessages id=\"user.update-about\" />\r\n                </h2>\r\n              </CardTitle>\r\n\r\n              <Separator className=\"mb-3\" />\r\n\r\n              <FormGroup className=\"mb-3\">\r\n                <Label>\r\n                  <IntlMessages id=\"forms.full-name\" />\r\n                </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"full-name\"\r\n                  value={formValues.full_name}\r\n                  onChange={(event) => {\r\n                    handleChange(event, 'full_name');\r\n                  }}\r\n                  disabled={!editAbout}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup className=\"mb-3\">\r\n                <Label>\r\n                  <IntlMessages id=\"forms.email\" />\r\n                </Label>\r\n                <Input type=\"text\" name=\"email\" value={email} disabled />\r\n              </FormGroup>\r\n\r\n              <FormGroup className=\"mb-3\">\r\n                <Label>\r\n                  <IntlMessages id=\"forms.phone\" />\r\n                </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  value={formValues.contact_no}\r\n                  onChange={(event) => {\r\n                    handleChange(event, 'contact_no');\r\n                  }}\r\n                  disabled={!editAbout}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup className=\"mb-3\">\r\n                <Label>\r\n                  <IntlMessages id=\"forms.gender\" />\r\n                </Label>\r\n                {editAbout ? (\r\n                  <Select\r\n                    components={{ Input: CustomSelectInput }}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    name=\"select-gender\"\r\n                    defaultInputValue={formValues.gender}\r\n                    onChange={(selectedOption) => {\r\n                      setFormValues({\r\n                        ...formValues,\r\n                        gender: selectedOption.value,\r\n                      });\r\n                    }}\r\n                    options={genderOptions}\r\n                  />\r\n                ) : (\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"gender\"\r\n                    value={formValues.gender}\r\n                    disabled={!editAbout}\r\n                  />\r\n                )}\r\n              </FormGroup>\r\n\r\n              <FormGroup className=\"mb-3\">\r\n                <Label>\r\n                  <IntlMessages id=\"forms.t-shirt-size\" />\r\n                </Label>\r\n                {editAbout ? (\r\n                  <Select\r\n                    components={{ Input: CustomSelectInput }}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    name=\"select-t-shirt-size\"\r\n                    defaultInputValue={formValues.tshirt_size}\r\n                    onChange={(selectedOption) => {\r\n                      setFormValues({\r\n                        ...formValues,\r\n                        tshirt_size: selectedOption.value,\r\n                      });\r\n                    }}\r\n                    options={shirtSizeOptions}\r\n                  />\r\n                ) : (\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"t-shirt-size\"\r\n                    value={formValues.tshirt_size}\r\n                    disabled={!editAbout}\r\n                  />\r\n                )}\r\n              </FormGroup>\r\n\r\n              <FormGroup className=\"mb-3\">\r\n                <Label>\r\n                  <IntlMessages id=\"forms.bio\" />\r\n                </Label>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"bio\"\r\n                  rows=\"6\"\r\n                  placeholder=\"About Yourself\"\r\n                  value={formValues.bio}\r\n                  onChange={(event) => {\r\n                    handleChange(event, 'bio');\r\n                  }}\r\n                  disabled={!editAbout}\r\n                />\r\n              </FormGroup>\r\n\r\n              {editAbout && (\r\n                <FormGroup className=\"text-center\">\r\n                  <StateButton\r\n                    id=\"submitAndNextButton\"\r\n                    color=\"primary\"\r\n                    onClick={() => handleSubmitAbout(formValues)}\r\n                    next={() => {\r\n                      setEditAbout(false);\r\n                    }}\r\n                  >\r\n                    <IntlMessages id=\"forms.submit\" />\r\n                  </StateButton>\r\n                </FormGroup>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Colxx>\r\n          <FormGroup className=\"text-center\">\r\n            <Button\r\n              color=\"primary\"\r\n              disabled={editAbout}\r\n              className=\"m-3\"\r\n              href={`${adminRoot}/profile/education`}\r\n            >\r\n              <IntlMessages id=\"forms.next\" />\r\n            </Button>\r\n          </FormGroup>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ history, authUser }) => {\r\n  const { currentUser, profileData } = authUser;\r\n  return { currentUser, profileData, history };\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  getProfileDataAction: getProfileData,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(About);\r\n"],"sourceRoot":""}