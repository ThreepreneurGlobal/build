{"version":3,"sources":["helpers/IntlMessages.js","components/common/CustomBootstrap.js","layout/UserLayout.js","views/user/verify-otp.js","views/user/index.js"],"names":["injectIntl","props","withRef","Colxx","widths","Separator","className","UserLayout","children","useEffect","document","body","classList","add","remove","connect","authUser","OTP","verifyToken","loading","error","verifyOTPAction","verifyOTP","history","useState","console","log","NotificationManager","success","initialValues","Row","xxs","md","Card","to","CardTitle","IntlMessages","id","onSubmit","values","push","errors","touched","FormGroup","Label","name","Button","color","size","Login","React","lazy","Register","ForgotPassword","ResetPassword","User","match","fallback","exact","from","url","path","render"],"mappings":"iLAKeA,iBAFO,SAACC,GAAD,OAAW,cAAC,IAAD,eAAsBA,MAEd,CACvCC,SAAS,K,wICHLC,EAAQ,SAACF,GAAD,OACZ,cAAC,IAAD,2BAASA,GAAT,IAAgBG,OAAQ,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,WAE1DC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAChB,qBAAKA,UAAS,oBAAeA,O,oFCgBhBC,EArBI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAWpB,OAVAC,qBAAU,WAIR,OAHAC,SAASC,KAAKC,UAAUC,IAAI,cAC5BH,SAASC,KAAKC,UAAUC,IAAI,aAErB,WACLH,SAASC,KAAKC,UAAUE,OAAO,cAC/BJ,SAASC,KAAKC,UAAUE,OAAO,gBAEhC,IAGD,qCACE,qBAAKR,UAAU,qBACf,+BACE,qBAAKA,UAAU,YAAf,SAA4BE,U,2HCqGrBO,eALS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEzB,MAAO,CAAEC,IADoCD,EAArCC,IACMC,YAD+BF,EAAhCE,YACcC,QADkBH,EAAnBG,QACUC,MADSJ,EAAVI,SAIG,CACtCC,gBAAiBC,MADJP,EA5GG,SAAC,GAMZ,IALLQ,EAKI,EALJA,QACAL,EAII,EAJJA,YACAC,EAGI,EAHJA,QAGI,EACUK,mBAAS,IAAhBP,EADH,oBAEJQ,QAAQC,IAAIR,GAoBZT,qBAAU,WACHU,GACHQ,IAAoBC,QAClB,kEACA,YACA,IACA,KACA,KACA,MAGH,CAACT,IAEJ,IAAMU,EAAgB,CAAEZ,OAExB,OACE,cAACa,EAAA,EAAD,CAAKxB,UAAU,QAAf,SACE,cAAC,IAAD,CAAOyB,IAAI,KAAKC,GAAG,KAAK1B,UAAU,kBAAlC,SACE,eAAC2B,EAAA,EAAD,CAAM3B,UAAU,YAAhB,UACE,sBAAKA,UAAU,gCAAf,UACE,mBAAGA,UAAU,gBAAb,qCACA,oBAAGA,UAAU,aAAb,sDAC2C,6BAG7C,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAS4B,GAAG,IAAI5B,UAAU,QAA1B,SACE,sBAAMA,UAAU,kBAElB,cAAC6B,EAAA,EAAD,CAAW7B,UAAU,OAArB,SACE,cAAC8B,EAAA,EAAD,CAAcC,GAAG,sBAGnB,cAAC,IAAD,CAAQR,cAAeA,EAAeS,SA3C5B,SAACC,GACnBd,QAAQC,IAAIa,GACPpB,GACgB,KAAfoB,EAAOtB,KACTM,EAAQiB,KAAK,MAuCT,SACG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,eAAC,IAAD,CAAMpC,UAAU,kCAAhB,UACE,eAACqC,EAAA,EAAD,CAAWrC,UAAU,6BAArB,UACE,cAACsC,EAAA,EAAD,UACE,cAACR,EAAA,EAAD,CAAcC,GAAG,eAEnB,cAAC,IAAD,CAAO/B,UAAU,eAAeuC,KAAK,QACpCJ,EAAOxB,KAAOyB,EAAQzB,KACrB,qBAAKX,UAAU,2BAAf,SACGmC,EAAOxB,SAId,qBAAKX,UAAU,gDAAf,SACE,eAACwC,EAAA,EAAD,CACEC,MAAM,UACNzC,UAAS,wCACPa,EAAU,eAAiB,IAE7B6B,KAAK,KALP,UAOE,uBAAM1C,UAAU,yBAAhB,UACE,sBAAMA,UAAU,YAChB,sBAAMA,UAAU,YAChB,sBAAMA,UAAU,eAElB,sBAAMA,UAAU,QAAhB,SACE,cAAC8B,EAAA,EAAD,CAAcC,GAAG,qDC9FnCY,EAAQC,IAAMC,MAAK,kBACvB,iCAEIC,EAAWF,IAAMC,MAAK,kBAC1B,iCAEIE,EAAiBH,IAAMC,MAAK,kBAChC,iCAEIG,EAAgBJ,IAAMC,MAAK,kBAC/B,iCAoCaI,UAjCF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd,OACE,cAAC,EAAD,UACE,cAAC,WAAD,CAAUC,SAAU,qBAAKnD,UAAU,YAAnC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAUoD,OAAK,EAACC,KAAI,UAAKH,EAAMI,IAAX,KAAmB1B,GAAE,UAAKsB,EAAMI,IAAX,YACzC,cAAC,IAAD,CACEC,KAAI,UAAKL,EAAMI,IAAX,UACJE,OAAQ,SAAC7D,GAAD,OAAW,cAACgD,EAAD,eAAWhD,OAEhC,cAAC,IAAD,CACE4D,KAAI,UAAKL,EAAMI,IAAX,aACJE,OAAQ,SAAC7D,GAAD,OAAW,cAACmD,EAAD,eAAcnD,OAEnC,cAAC,IAAD,CACE4D,KAAI,UAAKL,EAAMI,IAAX,oBACJE,OAAQ,SAAC7D,GAAD,OAAW,cAACoD,EAAD,eAAoBpD,OAEzC,cAAC,IAAD,CACE4D,KAAI,UAAKL,EAAMI,IAAX,mBACJE,OAAQ,SAAC7D,GAAD,OAAW,cAACqD,EAAD,eAAmBrD,OAExC,cAAC,IAAD,CACE4D,KAAI,UAAKL,EAAMI,IAAX,eACJE,OAAQ,SAAC7D,GAAD,OAAW,cAAC,EAAD,eAAeA,OAEpC,cAAC,IAAD,CAAUiC,GAAG","file":"static/js/views-user.a7499493.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = (props) => <FormattedMessage {...props} />;\r\n\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nconst Colxx = (props) => (\r\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = ({ className }) => (\r\n  <div className={`separator ${className}`} />\r\n);\r\nexport { Colxx, Separator };\r\n","import React, { useEffect } from 'react';\r\n\r\nconst UserLayout = ({ children }) => {\r\n  useEffect(() => {\r\n    document.body.classList.add('background');\r\n    document.body.classList.add('no-footer');\r\n\r\n    return () => {\r\n      document.body.classList.remove('background');\r\n      document.body.classList.remove('no-footer');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"fixed-background\" />\r\n      <main>\r\n        <div className=\"container\">{children}</div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserLayout;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { verifyOTP } from '../../redux/actions';\r\nimport { NotificationManager } from '../../components/common/react-notifications';\r\n\r\nconst VerifyOTP = ({\r\n  history,\r\n  verifyToken,\r\n  loading,\r\n  // error,\r\n  // verifyOTPAction,\r\n}) => {\r\n  const [OTP] = useState('');\r\n  console.log(verifyToken);\r\n\r\n  // const onVerifyOTP = (values) => {\r\n  //   console.log(values);\r\n  //   if (!loading) {\r\n  //     if (values.OTP !== '') {\r\n  //       verifyOTPAction({ ...values, verifyToken }, history);\r\n  //     }\r\n  //   }\r\n  // };\r\n  const onVerifyOTP = (values) => {\r\n    console.log(values);\r\n    if (!loading) {\r\n      if (values.OTP !== '') {\r\n        history.push('/');\r\n        // verifyOTPAction({ ...values, verifyToken }, history);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      NotificationManager.success(\r\n        'Successfully registered. Please verify OTP sent on your E-mail.',\r\n        'Enter OTP',\r\n        3000,\r\n        null,\r\n        null,\r\n        ''\r\n      );\r\n    }\r\n  }, [loading]);\r\n\r\n  const initialValues = { OTP };\r\n\r\n  return (\r\n    <Row className=\"h-100\">\r\n      <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n        <Card className=\"auth-card\">\r\n          <div className=\"position-relative image-side \">\r\n            <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\r\n            <p className=\"white mb-0\">\r\n              Please enter the OTP sent to your email. <br />\r\n            </p>\r\n          </div>\r\n          <div className=\"form-side\">\r\n            <NavLink to=\"/\" className=\"white\">\r\n              <span className=\"logo-single\" />\r\n            </NavLink>\r\n            <CardTitle className=\"mb-4\">\r\n              <IntlMessages id=\"user.verify-otp\" />\r\n            </CardTitle>\r\n\r\n            <Formik initialValues={initialValues} onSubmit={onVerifyOTP}>\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                  <FormGroup className=\"form-group has-float-label\">\r\n                    <Label>\r\n                      <IntlMessages id=\"user.otp\" />\r\n                    </Label>\r\n                    <Field className=\"form-control\" name=\"OTP\" />\r\n                    {errors.OTP && touched.OTP && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.OTP}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n                  <div className=\"d-flex justify-content-end align-items-center\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? 'show-spinner' : ''\r\n                      }`}\r\n                      size=\"lg\"\r\n                    >\r\n                      <span className=\"spinner d-inline-block\">\r\n                        <span className=\"bounce1\" />\r\n                        <span className=\"bounce2\" />\r\n                        <span className=\"bounce3\" />\r\n                      </span>\r\n                      <span className=\"label\">\r\n                        <IntlMessages id=\"user.verify-otp-button\" />\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { OTP, verifyToken, loading, error } = authUser;\r\n  return { OTP, verifyToken, loading, error };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  verifyOTPAction: verifyOTP,\r\n})(VerifyOTP);\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport UserLayout from '../../layout/UserLayout';\r\nimport VerifyOTP from './verify-otp';\r\n\r\nconst Login = React.lazy(() =>\r\n  import(/* webpackChunkName: \"user-login\" */ './login')\r\n);\r\nconst Register = React.lazy(() =>\r\n  import(/* webpackChunkName: \"user-register\" */ './register')\r\n);\r\nconst ForgotPassword = React.lazy(() =>\r\n  import(/* webpackChunkName: \"user-forgot-password\" */ './forgot-password')\r\n);\r\nconst ResetPassword = React.lazy(() =>\r\n  import(/* webpackChunkName: \"user-reset-password\" */ './reset-password')\r\n);\r\n\r\nconst User = ({ match }) => {\r\n  return (\r\n    <UserLayout>\r\n      <Suspense fallback={<div className=\"loading\" />}>\r\n        <Switch>\r\n          <Redirect exact from={`${match.url}/`} to={`${match.url}/login`} />\r\n          <Route\r\n            path={`${match.url}/login`}\r\n            render={(props) => <Login {...props} />}\r\n          />\r\n          <Route\r\n            path={`${match.url}/register`}\r\n            render={(props) => <Register {...props} />}\r\n          />\r\n          <Route\r\n            path={`${match.url}/forgot-password`}\r\n            render={(props) => <ForgotPassword {...props} />}\r\n          />\r\n          <Route\r\n            path={`${match.url}/reset-password`}\r\n            render={(props) => <ResetPassword {...props} />}\r\n          />\r\n          <Route\r\n            path={`${match.url}/verify-otp`}\r\n            render={(props) => <VerifyOTP {...props} />}\r\n          />\r\n          <Redirect to=\"/error\" />\r\n        </Switch>\r\n      </Suspense>\r\n    </UserLayout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n"],"sourceRoot":""}